{"version":3,"sources":["app/constants/meta.js","app/components/page/index.js","app/components/common/wrapper/index.js","app/components/common/button/index.js","app/components/common/form/index.js","app/components/common/input/index.js","app/components/common/linkButton/index.js","app/components/common/pageHeading/index.js","app/routes/categories/categoriesSelectors.js","app/components/layout/index.js","app/components/common/select/index.js","app/components/common/multiSelectTag/index.js","app/components/common/confirmationModal/index.js","app/routes/blogs/blogs.js","app/routes/blogs/blogsSelectors.js","app/routes/blogs/index.js"],"names":["_assets_imgs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","default","title","description","image","LOGO","twitter","sep","siteURL","keywords","facebookAppId","updated","Date","toDateString","published","contentType","home","id","login","signup","forgetpassword","notfound","SITE_URL","Meta","defaultTitle","defaultDescription","defaultKeywords","defaultImage","defaultTwitter","defaultSep","defaultUpdated","defaultPublished","defaultContentType","Page","pathname","_ref","noCrawl","category","tags","theTitle","substring","theDescription","theImage","concat","metaTags","itemprop","content","name","property","push","_this$props","this","props","children","className","rest","Object","C_Abhishar_demo_dash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","htmlAttributes","lang","itemscope","undefined","itemtype","schema","link","rel","href","location","meta","getMetaTags","Component","withRouter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Wrapper","Button","label","type","onClick","disabled","variations","btnClass","Form","autoComplete","_wrapper__WEBPACK_IMPORTED_MODULE_2__","Input","value","onChange","htmlFor","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","LinkButton","to","PageHeading","text","d","makeSelectCategories","makeSelectCategoryisFetching","reselect__WEBPACK_IMPORTED_MODULE_0__","_categoriesConstants__WEBPACK_IMPORTED_MODULE_1__","categoriesState","state","get","CATEGORIES_STATE_KEY","createSelector","Row","ContainerFluid","Col","_ref3","_ref5","xs","sm","md","lg","classes","Select","options","map","op","key","MultiSelectTag","clickHandler","option","_this","uniqueKey","C_Abhishar_demo_dash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","indexOf","toString","filter","i","CustomEvent","detail","bubbles","cancelable","_this2","_this$props2","_wrapper__WEBPACK_IMPORTED_MODULE_8__","React","ConfirmationModal","isOpen","_ref$negativeBtnLabel","negativeBtnLabel","_ref$positiveBtnLabel","positiveBtnLabel","_ref$title","message","onClose","item","react_default","index_es","open","showCloseIcon","classNames","transitionEnter","transitionEnterActive","transitionExit","transitionExitActive","common_button","Blogs","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDeleteConfirmation","response","setState","confirmationModal","blogId","pathOr","deleteBlog","blog","fetchBlogs","updateFilters","filters","history","payload","processQueryParams","replace","path","search","QueryString","stringify","cleanObject","renderBlogsTable","data","isFetching","Fragment","l","l2","i2","length","TABLE_COLUMNS","col","index","_id","getValue","onChangeHandler","e","preventDefault","_this$props3","target","defineProperty","objectSpread","filterDebounce","renderFilterMessage","_this$props4","layout","renderFilterView","_this$props5","categories","isFeatured","isTrending","common_form","onSubmit","input","common_select","TRENDING_OPTIONS","FEATURED_OPTIONS","multiSelectTag","renderPageHeader","linkButton","author","findValueById","TRENDING","FEATURED","viewsCount","PUBLISHED_BY","publishedBy","PUBLISHED_BY_OPTIONS","toConsumableArray","_","debounce","page","blogs","pageHeading","common_confirmationModal","assign","blogsState","BLOGS_STATE_KEY","makeSelectBlogsData","makeSelectIsBlogsFetching","makeSelectIsBlogsDeleting","makeSelectIsBlogsFilters","toJS","mapStateToProps","createStructuredSelector","isDeleting","connect","dispatch"],"mappings":"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","file":"static/js/blogs.442da979.chunk.js","sourcesContent":["import { LOGO } from \"../assets/imgs\";\r\n\r\nexport default {\r\n  default: {\r\n    title: \"Meuzic\",\r\n    description: \"www.meuzic.com\",\r\n    image: LOGO,\r\n    twitter: \"\",\r\n    sep: \" | \",\r\n    siteURL: \"\",\r\n    keywords:\"\",\r\n    facebookAppId: \"XXXXXXXXX\",\r\n    updated: new Date().toDateString(),\r\n    published: new Date().toDateString(),\r\n    contentType: \"website\"\r\n  },\r\n  home: {\r\n    id: \"home\",\r\n    title: \"Dashboard\",\r\n    description: \"Dashboard\"\r\n  },\r\n  login: {\r\n    id: \"login\",\r\n    title: \"Login\",\r\n    description: \"Login to Meuzic\"\r\n  },\r\n  signup: {\r\n    id: \"signup\",\r\n    title: \"Signup\",\r\n    description: \"Signup on Meuzic\"\r\n  },\r\n  forgetpassword: {\r\n    id: \"forgotpassword\",\r\n    title: \"Forget Password\",\r\n    description: \"Forget Password\"\r\n  },\r\n  notfound: {\r\n    id: \"notfound\",\r\n    title: \"Oops! 404\",\r\n    description: \"This is not the web page you are looking for.\"\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Helmet from \"react-helmet\";\r\nimport Meta from \"../../constants/meta\";\r\n\r\nconst SITE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? Meta.default.siteURL\r\n    : Meta.default.siteURL;\r\n\r\nconst FACEBOOK_APP_ID = \"XXXXXXXXX\";\r\n\r\nconst defaultTitle = Meta.default.title;\r\nconst defaultDescription = Meta.default.description;\r\nconst defaultKeywords = Meta.default.keywords;\r\nconst defaultImage = Meta.default.image;\r\nconst defaultTwitter = Meta.default.twitter;\r\nconst defaultSep = Meta.default.sep;\r\nconst defaultUpdated = Meta.default.updated;\r\nconst defaultPublished = Meta.default.published;\r\nconst defaultContentType = Meta.default.contentType;\r\n\r\nclass Page extends Component {\r\n  getMetaTags(\r\n    {\r\n      title,\r\n      description,\r\n      image,\r\n      contentType,\r\n      twitter,\r\n      noCrawl,\r\n      published,\r\n      updated,\r\n      category,\r\n      tags,\r\n      keywords\r\n    },\r\n    pathname\r\n  ) {\r\n    const theTitle = title\r\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\r\n      : defaultTitle;\r\n    const theDescription = description\r\n      ? description.substring(0, 155)\r\n      : defaultDescription;\r\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\r\n\r\n    const metaTags = [\r\n      { itemprop: \"name\", content: theTitle },\r\n      { itemprop: \"description\", content: theDescription },\r\n      { itemprop: \"image\", content: theImage },\r\n      { name: \"description\", content: theDescription },\r\n      { name: \"keywords\", content: keywords || defaultKeywords },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n      { name: \"twitter:site\", content: defaultTwitter },\r\n      { name: \"twitter:title\", content: theTitle },\r\n      { name: \"twitter:description\", content: theDescription },\r\n      { name: \"twitter:creator\", content: twitter || defaultTwitter },\r\n      { name: \"twitter:image:src\", content: theImage },\r\n      { property: \"og:title\", content: theTitle },\r\n      { property: \"og:type\", content: contentType || defaultContentType },\r\n      { property: \"og:url\", content: SITE_URL + pathname },\r\n      { property: \"og:image\", content: theImage },\r\n      { property: \"og:description\", content: theDescription },\r\n      { property: \"og:site_name\", content: defaultTitle },\r\n      { property: \"fb:app_id\", content: FACEBOOK_APP_ID }\r\n    ];\r\n\r\n    if (noCrawl) {\r\n      metaTags.push({ name: \"robots\", content: \"noindex, nofollow\" });\r\n    } else {\r\n      metaTags.push({ name: \"robots\", content: \"index, follow\" });\r\n    }\r\n\r\n    if (published) {\r\n      metaTags.push({\r\n        name: \"article:published_time\",\r\n        content: published || defaultPublished\r\n      });\r\n    }\r\n    if (updated) {\r\n      metaTags.push({\r\n        name: \"article:modified_time\",\r\n        content: updated || defaultUpdated\r\n      });\r\n    }\r\n    if (category) {\r\n      metaTags.push({ name: \"article:section\", content: category });\r\n    }\r\n    if (tags) {\r\n      metaTags.push({ name: \"article:tag\", content: tags });\r\n    }\r\n\r\n    return metaTags;\r\n  }\r\n\r\n  render() {\r\n    const { children, id, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div id={id} className={className}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: \"en\",\r\n            itemscope: undefined,\r\n            itemtype: `http://schema.org/${rest.schema || \"WebPage\"}`\r\n          }}\r\n          title={\r\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\r\n          }\r\n          link={[\r\n            {\r\n              rel: \"canonical\",\r\n              href: SITE_URL + this.props.location.pathname\r\n            }\r\n          ]}\r\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React from \"react\";\r\n\r\nconst Wrapper = ({ children, className }) => (\r\n  <div className={className}>{children}</div>\r\n);\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\n/**\r\n * Button Variations\r\n * Size : Small(btn-xs) Medium(btn-md) Large(btn-lg)\r\n */\r\n\r\nconst Button = ({ label, type, onClick, className, disabled, variations }) => {\r\n  let btnClass = \"\";\r\n  if (className) {\r\n    btnClass = className;\r\n  }\r\n\r\n  if (variations) {\r\n    btnClass = `${btnClass} ${variations}`;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={btnClass}\r\n      disabled={disabled}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Form = ({autoComplete,children}) => (\r\n  <form autoComplete={autoComplete}>\r\n    {children}\r\n  </form>\r\n);\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport './input.scss';\r\nimport Wrapper from \"../wrapper\";\r\n\r\nconst Input = ({\r\n  id,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  label,\r\n  disabled,\r\n  className\r\n}) => (\r\n  <Wrapper className='mb-3'>\r\n    <label htmlFor={id}>{label}</label>\r\n    <input\r\n      id={id}\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n      disabled={disabled}\r\n      className={className}\r\n    />\r\n  </Wrapper>\r\n);\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./linkbutton.scss\";\r\n\r\nconst LinkButton = ({ label, to, className }) => {\r\n  return (\r\n    <Link to={to} className={className}>\r\n      {label}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from 'react';\r\nimport './pageHeading.scss';\r\nconst PageHeading = ({text}) => {\r\n  return (\r\n    <div className='page-heading mb-2'>{text}</div>\r\n  )\r\n}\r\n\r\nexport default PageHeading;\r\n","import { createSelector } from \"reselect\";\r\nimport { CATEGORIES_STATE_KEY } from \"./categoriesConstants\";\r\n\r\nexport const categoriesState = state => state.get(CATEGORIES_STATE_KEY);\r\n\r\nexport const makeSelectCategories = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"data\")\r\n);\r\nexport const makeSelectCategoryisFetching = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"isFetching\")\r\n);\r\n","import React from \"react\";\r\nimport \"./layout.scss\";\r\n\r\nexport const Row = ({ children, className }) => (\r\n  <div className={`row ${className ? className : \"\"}`}>{children}</div>\r\n);\r\n\r\nexport const Container = ({ children }) => (\r\n  <div className=\"container\">{children}</div>\r\n);\r\n\r\nexport const ContainerFluid = ({ children }) => (\r\n  <div className=\"container-fluid\">{children}</div>\r\n);\r\n\r\nexport const Flex = ({ children, direction }) => {\r\n  const style = {\r\n    display: \"flex\",\r\n    flexDirection: direction || \"row\",\r\n    flexWrap: \"wrap\"\r\n  };\r\n  return <div style={style}>{children}</div>;\r\n};\r\n\r\nexport const Col = ({ children, xs, sm, md, lg, className }) => {\r\n  let classes = \"\";\r\n  if (xs) {\r\n    classes = `col-xs-${xs}`;\r\n  }\r\n  if (sm) {\r\n    classes = `${classes} col-sm-${sm}`;\r\n  }\r\n  if (md) {\r\n    classes = `${classes} col-md-${md}`;\r\n  }\r\n  if (lg) {\r\n    classes = `${classes} col-lg-${lg}`;\r\n  }\r\n  if (className) {\r\n    classes = `${classes} ${className}`;\r\n  }\r\n  return <div className={classes}>{children}</div>;\r\n};\r\n","import React from \"react\";\r\nimport \"./select.scss\";\r\nimport Wrapper from \"../wrapper\";\r\n\r\nconst Select = ({\r\n  id,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  label,\r\n  disabled,\r\n  className,\r\n  options\r\n}) => (\r\n  <Wrapper className=\"mb-3\">\r\n    <label htmlFor={id}>{label}</label>\r\n    <select\r\n      id={id}\r\n      type={type}\r\n      name={name}\r\n      value={value}\r\n      onChange={onChange}\r\n      disabled={disabled}\r\n      className={className}\r\n    >\r\n      {options &&\r\n        options.map(op => (\r\n          <option key={op.id} value={op.id}>\r\n            {op.name}\r\n          </option>\r\n        ))}\r\n    </select>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport \"./multiSelectTag.scss\";\r\nimport Wrapper from \"../wrapper\";\r\n\r\nclass MultiSelectTag extends React.Component {\r\n  clickHandler = option => {\r\n    const { value, name, onChange, uniqueKey } = this.props;\r\n    if (value && name) {\r\n      let options = [...value];\r\n      if (options.indexOf(option[uniqueKey].toString()) > -1) {\r\n        options = options.filter(i => (i).toString() !== option[uniqueKey].toString());\r\n      } else {\r\n        options = [...options, option[uniqueKey].toString()];\r\n      }\r\n      const event = new CustomEvent(\"multiSelectOption\", {\r\n        detail: {\r\n          name,\r\n          value: options\r\n        },\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n      onChange(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      value,\r\n      label,\r\n      options,\r\n      uniqueKey\r\n    } = this.props;\r\n    return (\r\n      <Wrapper className=\"mb-3 multi-select-tag\">\r\n        <label htmlFor={id}>{label}</label>\r\n        <div className=\"tags\" id={id}>\r\n          {options &&\r\n            options.map(op => (\r\n              <span\r\n                onClick={() => this.clickHandler(op)}\r\n                key={op[uniqueKey]}\r\n                className={`tag ${value.indexOf(op[uniqueKey].toString()) > -1 ? 'active' : ''}`}\r\n              >\r\n                {op.name}\r\n              </span>\r\n            ))}\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiSelectTag;\r\n","import React from \"react\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport \"./confirmationModal.scss\";\r\nimport Button from \"../button\";\r\n\r\nconst ConfirmationModal = ({\r\n  isOpen,\r\n  negativeBtnLabel = \"No\",\r\n  positiveBtnLabel = \"Yes\",\r\n  title = \"Confirmation\",\r\n  message,\r\n  onClose,\r\n  item\r\n}) => {\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      showCloseIcon={false}\r\n      onClose={() => onClose(false)}\r\n      classNames={{\r\n        transitionEnter: \"transitionEnter\",\r\n        transitionEnterActive: \"transitionEnterActive\",\r\n        transitionExit: \"transitionExitActive\",\r\n        transitionExitActive: \"transitionExitActive\"\r\n      }}\r\n    >\r\n      <div className=\"confirmation-modal\">\r\n        <div className=\"modal-header\">{title}</div>\r\n        <div className=\"modal-body\">{message}</div>\r\n        <div className=\"modal-footer\">\r\n          <Button\r\n            variations=\"size-xs\"\r\n            onClick={() => onClose(true, item)}\r\n            label={positiveBtnLabel}\r\n          />\r\n          <Button\r\n            variations=\"size-xs\"\r\n            onClick={() => onClose(false, item)}\r\n            label={negativeBtnLabel}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React from \"react\";\r\nimport QueryString from \"query-string\";\r\n\r\nimport _ from \"lodash\";\r\nimport { pathOr } from \"lodash/fp\";\r\nimport Page from \"../../components/page\";\r\nimport \"./blogs.scss\";\r\nimport Meta from \"../../constants/meta\";\r\nimport Form from \"../../components/common/form\";\r\nimport Input from \"../../components/common/input\";\r\nimport LinkButton from \"../../components/common/linkButton\";\r\nimport {\r\n  findValueById,\r\n  cleanObject,\r\n  processQueryParams\r\n} from \"../../utils/common\";\r\nimport PageHeading from \"../../components/common/pageHeading\";\r\nimport { TRENDING, FEATURED, PUBLISHED_BY } from \"../../constants\";\r\nimport { Row, Col, ContainerFluid } from \"../../components/layout\";\r\nimport Select from \"../../components/common/select\";\r\nimport MultiSelectTag from \"../../components/common/multiSelectTag\";\r\nimport ConfirmationModal from \"../../components/common/confirmationModal\";\r\n\r\nclass Blogs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmationModal: {\r\n        isOpen: false\r\n      }\r\n    };\r\n    this.TABLE_COLUMNS = [\r\n      {\r\n        name: \"Title\",\r\n        key: \"title\",\r\n        getValue: blog => (\r\n          <LinkButton\r\n            className=\"d-block\"\r\n            label={blog.title}\r\n            to={`/blog/${blog._id}`}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: \"Author\",\r\n        key: \"author\",\r\n        getValue: blog => blog.author\r\n      },\r\n      {\r\n        name: \"Trending\",\r\n        key: \"isTrending\",\r\n        getValue: blog => findValueById(TRENDING, blog.isTrending)\r\n      },\r\n      {\r\n        name: \"Featured\",\r\n        key: \"isFeatured\",\r\n        getValue: blog => findValueById(FEATURED, blog.isFeatured)\r\n      },\r\n      {\r\n        name: \"Views\",\r\n        key: \"viewsCount\",\r\n        getValue: blog => blog.viewsCount\r\n      },\r\n      {\r\n        name: \"Published By\",\r\n        key: \"publishedBy\",\r\n        getValue: blog => findValueById(PUBLISHED_BY, blog.publishedBy)\r\n      },\r\n      {\r\n        name: \"Action\",\r\n        key: \"publishedBy\",\r\n        getValue: blog => (\r\n          <>\r\n            <LinkButton\r\n              to={`/blog/${blog._id}`}\r\n              label=\"Edit\"\r\n              className=\"edit\"\r\n            />\r\n            <span className=\"delete\" onClick={() => this.deleteBlog(blog)}>\r\n              Delete\r\n            </span>\r\n          </>\r\n        )\r\n      }\r\n    ];\r\n    this.PUBLISHED_BY_OPTIONS = [{ name: \"All\", id: \"\" }, ...PUBLISHED_BY];\r\n    this.FEATURED_OPTIONS = [{ name: \"All\", id: \"\" }, ...FEATURED];\r\n    this.TRENDING_OPTIONS = [{ name: \"All\", id: \"\" }, ...TRENDING];\r\n    this.filterDebounce = _.debounce(this.fetchBlogs, 600);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBlogs();\r\n  }\r\n\r\n  getDeleteConfirmation = (response, item) => {\r\n    this.setState({\r\n      confirmationModal: {\r\n        isOpen: false,\r\n        title: undefined,\r\n        message: undefined\r\n      }\r\n    });\r\n    if (response) {\r\n      const blogId = pathOr(null, \"_id\", item);\r\n      this.props.deleteBlog(blogId);\r\n    }\r\n  };\r\n\r\n  deleteBlog = blog => {\r\n    const blogId = pathOr(null, \"_id\", blog);\r\n    if (blogId) {\r\n      this.setState({\r\n        confirmationModal: {\r\n          isOpen: true,\r\n          title: \"Delete Blog\",\r\n          message: `Are you sure you want to delete \"${blog.title}\" blog?`,\r\n          item: blog\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  fetchBlogs = () => {\r\n    const {\r\n      fetchBlogs,\r\n      updateFilters,\r\n      location,\r\n      filters,\r\n      history\r\n    } = this.props;\r\n    let payload = processQueryParams(location, filters);\r\n    updateFilters(payload);\r\n    history.replace({\r\n      path: location.pathname,\r\n      search: QueryString.stringify(cleanObject(payload))\r\n    });\r\n    fetchBlogs(cleanObject(payload));\r\n  };\r\n\r\n  renderBlogsTable = () => {\r\n    const { data, isFetching } = this.props;\r\n    // Show Sekeleton If fetching state\r\n    if (isFetching) {\r\n      const list = [\r\n        [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\", \"\"]\r\n      ];\r\n      return (\r\n        <>\r\n          {list.map((l, i) => (\r\n            <div key={i} className=\"table-skeleton\">\r\n              {l.map((l2, i2) => (\r\n                <div key={i2} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </>\r\n      );\r\n    }\r\n    if (!isFetching && data.length > 0) {\r\n      return (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                {this.TABLE_COLUMNS.map((col, index) => (\r\n                  <th key={index}>{col.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map(blog => (\r\n                <tr key={blog._id}>\r\n                  {this.TABLE_COLUMNS.map((col, index) => (\r\n                    <td key={index}>{col.getValue(blog)}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  onChangeHandler = e => {\r\n    e.preventDefault();\r\n    const { updateFilters, history, filters, location } = this.props;\r\n    let name, value;\r\n    // To handle MultiSelectTag Change\r\n    if (e.type === \"multiSelectOption\") {\r\n      name = e.detail.name;\r\n      value = e.detail.value;\r\n    } else {\r\n      name = e.target.name;\r\n      value = e.target.value;\r\n    }\r\n    const filter = {\r\n      [name]: value\r\n    };\r\n    const payload = { ...filters, ...filter };\r\n    updateFilters(payload);\r\n    history.replace({\r\n      path: location.pathname,\r\n      search: QueryString.stringify(cleanObject(payload))\r\n    });\r\n    this.filterDebounce();\r\n  };\r\n\r\n  renderFilterMessage = () => {\r\n    const { data, isFetching } = this.props;\r\n    let message;\r\n    if (isFetching) {\r\n      message = \"Loading... Please wait.\";\r\n    } else {\r\n      if (data && data.length) {\r\n        message = `Showing ${data.length} result(s)`;\r\n      } else {\r\n        message = `Sorry, no data found.`;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          <div className=\"message\">{message}</div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  };\r\n\r\n  renderFilterView = () => {\r\n    const { filters, categories } = this.props;\r\n    const { title, isFeatured, isTrending, category } = filters;\r\n    return (\r\n      <div className=\"filter-view\">\r\n        <Form autoComplete=\"off\" onSubmit={this.onChangeHandler}>\r\n          <ContainerFluid>\r\n            <Row>\r\n              <Col xs={12} sm={6} lg={6}>\r\n                <Input\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={this.onChangeHandler}\r\n                  label=\"SEARCH BLOGS BY NAME/CATEGORY\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} sm={3} lg={3}>\r\n                <Select\r\n                  id=\"isTrending\"\r\n                  name=\"isTrending\"\r\n                  value={isTrending}\r\n                  onChange={this.onChangeHandler}\r\n                  label=\"TRENDING\"\r\n                  options={this.TRENDING_OPTIONS}\r\n                />\r\n              </Col>\r\n              <Col xs={12} sm={3} lg={3}>\r\n                <Select\r\n                  id=\"isFeatured\"\r\n                  name=\"isFeatured\"\r\n                  value={isFeatured}\r\n                  onChange={this.onChangeHandler}\r\n                  label=\"FEATURED\"\r\n                  options={this.FEATURED_OPTIONS}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={12} lg={12}>\r\n                <MultiSelectTag\r\n                  id=\"category\"\r\n                  uniqueKey=\"_id\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  onChange={this.onChangeHandler}\r\n                  label=\"CATEGORY\"\r\n                  options={categories}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {this.renderFilterMessage()}\r\n          </ContainerFluid>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPageHeader = () => {\r\n    return (\r\n      <div className=\"page-header\">\r\n        <h1>Blogs</h1>\r\n        <LinkButton to=\"/blog/add\" label=\"Add New Blog\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { confirmationModal } = this.state;\r\n    return (\r\n      <Page {...Meta.blogs}>\r\n        <div className=\"blogs-page\">\r\n          <PageHeading text=\"Dashboard &#8226; Blogs\" />\r\n          {this.renderPageHeader()}\r\n          {this.renderFilterView()}\r\n          {this.renderBlogsTable()}\r\n          <ConfirmationModal\r\n            {...confirmationModal}\r\n            onClose={this.getDeleteConfirmation}\r\n          />\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blogs;\r\n","import { createSelector } from \"reselect\";\r\nimport { BLOGS_STATE_KEY } from \"./blogsConstants\";\r\n\r\nexport const blogsState = state => state.get(BLOGS_STATE_KEY);\r\n\r\nexport const makeSelectBlogsData = createSelector(blogsState, state => state.get(\"data\"));\r\nexport const makeSelectIsBlogsFetching = createSelector(blogsState, state => state.get(\"isFetching\"));\r\nexport const makeSelectIsBlogsDeleting = createSelector(blogsState, state => state.get(\"isDeleting\"));\r\nexport const makeSelectIsBlogsFilters = createSelector(blogsState, state => state.get(\"filters\").toJS());\r\n","import { connect } from \"react-redux\";\r\nimport Blogs from \"./blogs\";\r\nimport {\r\n  fetchBlogs,\r\n  updateFilters,\r\n  deleteBlog\r\n} from \"../blogs/blogsActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { makeSelectBlogsData, makeSelectIsBlogsFetching, makeSelectIsBlogsDeleting, makeSelectIsBlogsFilters } from \"./blogsSelectors\";\r\nimport { makeSelectCategories } from \"../categories/categoriesSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  data : makeSelectBlogsData,\r\n  isFetching : makeSelectIsBlogsFetching,\r\n  isDeleting : makeSelectIsBlogsDeleting,\r\n  filters :makeSelectIsBlogsFilters,\r\n  categories : makeSelectCategories\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBlogs: (payload) => dispatch(fetchBlogs(payload)),\r\n  deleteBlog: (payload) => dispatch(deleteBlog(payload)),\r\n  updateFilters: filters => dispatch(updateFilters(filters))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Blogs);\r\n"],"sourceRoot":""}