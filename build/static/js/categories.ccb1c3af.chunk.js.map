{"version":3,"sources":["app/constants/meta.js","app/components/page/index.js","app/components/common/button/index.js","app/routes/categories/categoriesSelectors.js","app/components/common/pageHeading/index.js","app/routes/categories/categories.js","app/routes/categories/index.js"],"names":["_assets_imgs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","default","title","description","image","LOGO","twitter","sep","siteURL","keywords","facebookAppId","updated","Date","toDateString","published","contentType","home","id","login","signup","forgetpassword","notfound","SITE_URL","Meta","defaultTitle","defaultDescription","defaultKeywords","defaultImage","defaultTwitter","defaultSep","defaultUpdated","defaultPublished","defaultContentType","Page","pathname","_ref","noCrawl","category","tags","theTitle","substring","theDescription","theImage","concat","metaTags","itemprop","content","name","property","push","_this$props","this","props","children","className","rest","Object","C_Abhishar_demo_dash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","htmlAttributes","lang","itemscope","undefined","itemtype","schema","link","rel","href","location","meta","getMetaTags","Component","withRouter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","label","type","onClick","disabled","variations","btnClass","d","makeSelectCategories","makeSelectCategoryisFetching","reselect__WEBPACK_IMPORTED_MODULE_0__","_categoriesConstants__WEBPACK_IMPORTED_MODULE_1__","categoriesState","state","get","CATEGORIES_STATE_KEY","createSelector","PageHeading","text","Categories","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deleteCategory","confirm","_id","editCategory","addCategory","prompt","length","toast","error","renderCategoriesTable","data","isFetching","react_default","Fragment","map","l","i","key","l2","i2","TABLE_COLUMNS","col","index","row","rowIndex","getValue","renderPageHeader","common_button","fetchCategory","page","blogs","pageHeading","React","mapStateToProps","createStructuredSelector","connect","dispatch"],"mappings":"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","file":"static/js/categories.ccb1c3af.chunk.js","sourcesContent":["import { LOGO } from \"../assets/imgs\";\r\n\r\nexport default {\r\n  default: {\r\n    title: \"Meuzic\",\r\n    description: \"www.meuzic.com\",\r\n    image: LOGO,\r\n    twitter: \"\",\r\n    sep: \" | \",\r\n    siteURL: \"\",\r\n    keywords:\"\",\r\n    facebookAppId: \"XXXXXXXXX\",\r\n    updated: new Date().toDateString(),\r\n    published: new Date().toDateString(),\r\n    contentType: \"website\"\r\n  },\r\n  home: {\r\n    id: \"home\",\r\n    title: \"Dashboard\",\r\n    description: \"Dashboard\"\r\n  },\r\n  login: {\r\n    id: \"login\",\r\n    title: \"Login\",\r\n    description: \"Login to Meuzic\"\r\n  },\r\n  signup: {\r\n    id: \"signup\",\r\n    title: \"Signup\",\r\n    description: \"Signup on Meuzic\"\r\n  },\r\n  forgetpassword: {\r\n    id: \"forgotpassword\",\r\n    title: \"Forget Password\",\r\n    description: \"Forget Password\"\r\n  },\r\n  notfound: {\r\n    id: \"notfound\",\r\n    title: \"Oops! 404\",\r\n    description: \"This is not the web page you are looking for.\"\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Helmet from \"react-helmet\";\r\nimport Meta from \"../../constants/meta\";\r\n\r\nconst SITE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? Meta.default.siteURL\r\n    : Meta.default.siteURL;\r\n\r\nconst FACEBOOK_APP_ID = \"XXXXXXXXX\";\r\n\r\nconst defaultTitle = Meta.default.title;\r\nconst defaultDescription = Meta.default.description;\r\nconst defaultKeywords = Meta.default.keywords;\r\nconst defaultImage = Meta.default.image;\r\nconst defaultTwitter = Meta.default.twitter;\r\nconst defaultSep = Meta.default.sep;\r\nconst defaultUpdated = Meta.default.updated;\r\nconst defaultPublished = Meta.default.published;\r\nconst defaultContentType = Meta.default.contentType;\r\n\r\nclass Page extends Component {\r\n  getMetaTags(\r\n    {\r\n      title,\r\n      description,\r\n      image,\r\n      contentType,\r\n      twitter,\r\n      noCrawl,\r\n      published,\r\n      updated,\r\n      category,\r\n      tags,\r\n      keywords\r\n    },\r\n    pathname\r\n  ) {\r\n    const theTitle = title\r\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\r\n      : defaultTitle;\r\n    const theDescription = description\r\n      ? description.substring(0, 155)\r\n      : defaultDescription;\r\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\r\n\r\n    const metaTags = [\r\n      { itemprop: \"name\", content: theTitle },\r\n      { itemprop: \"description\", content: theDescription },\r\n      { itemprop: \"image\", content: theImage },\r\n      { name: \"description\", content: theDescription },\r\n      { name: \"keywords\", content: keywords || defaultKeywords },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n      { name: \"twitter:site\", content: defaultTwitter },\r\n      { name: \"twitter:title\", content: theTitle },\r\n      { name: \"twitter:description\", content: theDescription },\r\n      { name: \"twitter:creator\", content: twitter || defaultTwitter },\r\n      { name: \"twitter:image:src\", content: theImage },\r\n      { property: \"og:title\", content: theTitle },\r\n      { property: \"og:type\", content: contentType || defaultContentType },\r\n      { property: \"og:url\", content: SITE_URL + pathname },\r\n      { property: \"og:image\", content: theImage },\r\n      { property: \"og:description\", content: theDescription },\r\n      { property: \"og:site_name\", content: defaultTitle },\r\n      { property: \"fb:app_id\", content: FACEBOOK_APP_ID }\r\n    ];\r\n\r\n    if (noCrawl) {\r\n      metaTags.push({ name: \"robots\", content: \"noindex, nofollow\" });\r\n    } else {\r\n      metaTags.push({ name: \"robots\", content: \"index, follow\" });\r\n    }\r\n\r\n    if (published) {\r\n      metaTags.push({\r\n        name: \"article:published_time\",\r\n        content: published || defaultPublished\r\n      });\r\n    }\r\n    if (updated) {\r\n      metaTags.push({\r\n        name: \"article:modified_time\",\r\n        content: updated || defaultUpdated\r\n      });\r\n    }\r\n    if (category) {\r\n      metaTags.push({ name: \"article:section\", content: category });\r\n    }\r\n    if (tags) {\r\n      metaTags.push({ name: \"article:tag\", content: tags });\r\n    }\r\n\r\n    return metaTags;\r\n  }\r\n\r\n  render() {\r\n    const { children, id, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div id={id} className={className}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: \"en\",\r\n            itemscope: undefined,\r\n            itemtype: `http://schema.org/${rest.schema || \"WebPage\"}`\r\n          }}\r\n          title={\r\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\r\n          }\r\n          link={[\r\n            {\r\n              rel: \"canonical\",\r\n              href: SITE_URL + this.props.location.pathname\r\n            }\r\n          ]}\r\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\n/**\r\n * Button Variations\r\n * Size : Small(btn-xs) Medium(btn-md) Large(btn-lg)\r\n */\r\n\r\nconst Button = ({ label, type, onClick, className, disabled, variations }) => {\r\n  let btnClass = \"\";\r\n  if (className) {\r\n    btnClass = className;\r\n  }\r\n\r\n  if (variations) {\r\n    btnClass = `${btnClass} ${variations}`;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={btnClass}\r\n      disabled={disabled}\r\n    >\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { createSelector } from \"reselect\";\r\nimport { CATEGORIES_STATE_KEY } from \"./categoriesConstants\";\r\n\r\nexport const categoriesState = state => state.get(CATEGORIES_STATE_KEY);\r\n\r\nexport const makeSelectCategories = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"data\")\r\n);\r\nexport const makeSelectCategoryisFetching = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"isFetching\")\r\n);\r\n","import React from 'react';\r\nimport './pageHeading.scss';\r\nconst PageHeading = ({text}) => {\r\n  return (\r\n    <div className='page-heading mb-2'>{text}</div>\r\n  )\r\n}\r\n\r\nexport default PageHeading;\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\nimport \"./categories.scss\";\r\nimport Meta from \"../../constants/meta\";\r\nimport PageHeading from \"../../components/common/pageHeading\";\r\nimport Button from \"../../components/common/button\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Categories extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.TABLE_COLUMNS = [\r\n      {\r\n        name: \"S No\",\r\n        key: \"_id\",\r\n        getValue: (category, rowIndex) => rowIndex + 1\r\n      },\r\n      {\r\n        name: \"Cat ID\",\r\n        key: \"_id\",\r\n        getValue: category => category._id\r\n      },\r\n      {\r\n        name: \"Name\",\r\n        key: \"name\",\r\n        getValue: category => category.name\r\n      },\r\n      {\r\n        name: \"\",\r\n        key: \"publishedBy\",\r\n        getValue: category => (\r\n          <span\r\n            className=\"delete\"\r\n            onClick={() => this.deleteCategory(category)}\r\n          >\r\n            Delete\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchCategory();\r\n  }\r\n\r\n  deleteCategory = category => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    let confirmation = confirm(\r\n      `Are you sure you want to delete \"${category.name}\" blog?`\r\n    );\r\n    if (confirmation) {\r\n      this.props.deleteCategory(category._id);\r\n    }\r\n  };\r\n\r\n  editCategory = category => {};\r\n\r\n  addCategory = () => {\r\n    const name = prompt(\"Enter Category Name *\");\r\n    if (name && name.length > 0) {\r\n      this.props.addCategory({ name });\r\n    } else toast.error(\"Please enter a valid category name.\");\r\n  };\r\n\r\n  renderCategoriesTable = () => {\r\n    const { data, isFetching } = this.props;\r\n\r\n    if (isFetching) {\r\n      const list = [\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"],\r\n        [\"\", \"\", \"\", \"\", \"\"]\r\n      ];\r\n\r\n      return (\r\n        <>\r\n          {list.map((l, i) => (\r\n            <div key={i} className=\"table-skeleton\">\r\n              {l.map((l2, i2) => (\r\n                <div key={i2} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (!isFetching && data.length > 0) {\r\n      return (\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                {this.TABLE_COLUMNS.map((col, index) => (\r\n                  <th key={index}>{col.name}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((row, rowIndex) => (\r\n                <tr key={row._id}>\r\n                  {this.TABLE_COLUMNS.map((col, index) => (\r\n                    <td key={index}>{col.getValue(row, rowIndex)}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderPageHeader = () => {\r\n    return (\r\n      <div className=\"page-header\">\r\n        <h1>Categories</h1>\r\n        <Button onClick={this.addCategory} label=\"Add New Category\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Page {...Meta.blogs}>\r\n        <div className=\"categories-page\">\r\n          <PageHeading text=\"Dashboard &#8226; Categories\" />\r\n          {this.renderPageHeader()}\r\n          {this.renderCategoriesTable()}\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Categories;\r\n","import { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Categories from \"./categories\";\r\nimport {\r\n  fetchCategory,\r\n  addCategory,\r\n  deleteCategory\r\n} from \"./categoriesActions\";\r\nimport {\r\n  makeSelectCategories,\r\n  makeSelectCategoryisFetching\r\n} from \"./categoriesSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  data: makeSelectCategories,\r\n  isFetching: makeSelectCategoryisFetching,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCategory: data => dispatch(fetchCategory(data)),\r\n  addCategory: data => dispatch(addCategory(data)),\r\n  deleteCategory: data => dispatch(deleteCategory(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Categories);\r\n"],"sourceRoot":""}