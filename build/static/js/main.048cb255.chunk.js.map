{"version":3,"sources":["app/components/common/Icon/index.js","app/constants/index.js","app/routes/categories/categoriesConstants.js","app/assets/imgs/index.js","app/routes/blogs/blogsConstants.js","app/routes/addblog/addBlogConstants.js","app/utils/common.js","app/routes/categories/categoriesActions.js","app/appConstants.js","app/routes/tagging/taggingConstants.js","app/routes/login/loginConstants.js","app/appReducer.js","app/routes/home/HomeReducer.js","app/routes/login/loginReducer.js","app/routes/blogs/blogsReducer.js","app/routes/categories/categoriesReduer.js","app/routes/addblog/addBlogReducer.js","app/components/common/loader/loaderConstants.js","app/components/common/loader/loaderReducer.js","app/routes/tagging/taggingReducer.js","rootReducer.js","app/routes/home/HomeConstants.js","serviceWorker.js","app/appActions.js","app/components/header/header.js","app/components/header/index.js","app/components/footer/index.js","app/components/sidebar/sidebar.js","app/components/sidebar/index.js","app/components/authenticated-route/index.js","app/components/unauthenticated-route/index.js","app/routes/index.js","app/components/scrolltotop/index.js","app/components/common/loader/loader.js","app/components/common/loader/loaderSelectors.js","app/components/common/loader/index.js","app/components/errorBoundary/index.js","app/app.js","app/components/withLocalStorage/index.js","app/index.js","app/constants/config.js","app/constants/messages.js","app/utils/axios.js","app/apis/index.js","app/utils/services.js","app/components/common/loader/loaderActions.js","app/appSaga.js","app/routes/login/loginSaga.js","app/routes/blogs/blogsSaga.js","app/routes/categories/categoriesSaga.js","app/routes/addblog/addBlogSaga.js","app/routes/tagging/taggingSaga.js","rootSagas.js","index.js","store.js","app/appSelectors.js","app/routes/blogs/blogsActions.js","app/routes/addblog/addBlogActions.js","app/routes/login/loginActions.js","app/routes/tagging/taggingActions.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Icon","_ref","name","className","a","createElement","concat","d","__webpack_exports__","PUBLISH","PUBLISHED_BY","FEATURED","TRENDING","id","APP_NAME","ENV_TYPES","PROD","STAG","LOCAL","CATEGORIES_STATE_KEY","FETCH_CATEGORY","FETCHING_CATEGORY","FETCH_CATEGORY_SUCCESS","FETCH_CATEGORY_ERROR","ADD_CATEGORY","ADDING_CATEGORY","ADD_CATEGORY_SUCCESS","ADD_CATEGORY_ERROR","DELETE_CATEGORY","DELETEING_CATEGORY","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_ERROR","NAMESPACE","LOGO","IMG_PATH","BLOGS_STATE_KEY","FETCH_BLOGS","FETCHING_BLOGS","FETCH_BLOGS_SUCCESS","FETCH_BLOGS_ERROR","UPDATE_FILTERS","DELETE_BLOG","DELETING_BLOG","DELETE_BLOG_SUCCESS","DELETE_BLOG_ERROR","ADD_BLOG_STATE_KEY","UPDATE_FORM_DATA","ADD_BLOG","ADDING_BLOG","ADD_BLOG_SUCCESS","ADD_BLOG_ERROR","FETCH_BLOG","FETCHING_BLOG","FETCH_BLOG_SUCCESS","FETCH_BLOG_ERROR","isServer","window","document","setLocalStorage","key","value","localStorage","setItem","JSON","stringify","getLocalStorage","data","getItem","parse","findValueById","arr","list","filter","item","processQueryParams","location","storeFilters","queryParams","QueryString","search","ignoreQueryPrefix","category","payload","Object","C_Abhishar_demo_dash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","limit","parseInt","offset","cleanObject","object","keys","forEach","length","fetchCategory","fetchingCategory","fetchCategorySuccess","fetchCategoryError","addCategory","addingCategory","addCategorySuccess","addCategoryError","deleteCategory","deletingCategory","deleteCategorySuccess","deleteCategoryError","_categoriesConstants__WEBPACK_IMPORTED_MODULE_0__","type","APP_STATE_KEY","SET_DATA","LOGOUT","LOGGING_OUT","LOGOUT_SUCEESS","LOGOUT_ERROR","TAGGING_STATE_KEY","SELECT_CATEGORY","LOGIN_STATE_KEY","LOGIN","LOGGING_IN","LOGIN_SUCCESS","LOGIN_ERROR","appInitialState","fromJS","isLoggedIn","sidebar","initialState","home","isLoggingIn","reducer","state","arguments","undefined","action","set","merge","isFetching","filters","title","isTrending","isFeatured","error","isDeleting","BlogsReducer","get","blog","_id","err","CategoriesReducer","cats","restCats","cat","formData","author","keywords","image","imageSrc","story","isPublished","publishedBy","viewsCount","sharedCount","createdDate","Date","updatedDate","publishedDate","isAdding","AddBlogReducer","updatedFormData","SHOW_LOADER","HIDE_LOADER","loaderInitialState","selectedCategory","taggingReducer","combineReducers","_combineReducers","defineProperty","assign","users","LoginReducer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","setAppData","loggingOut","logoutSuccess","logoutError","Header","renderLogo","react_default","Link","to","src","alt","renderMenu","onClick","_this","props","logout","toggleSideBar","_this$props","renderToggleBtn","this","React","PureComponent","mapStateToProps","createStructuredSelector","makeSelectSidebar","connect","dispatch","Footer","year","getFullYear","role","aria-label","href","Component","Sidebar","isActive","url","path","pathname","includes","withRouter","makeSelectIsLoggedIn","component","rest","objectWithoutProperties","Route","render","Redirect","query","queryString","redirect","Home","Loadable","loader","Promise","all","e","bind","loading","Signup","Login","ForgotPassword","NotFound","Blogs","Categories","AddBlog","Tagging","routes","Switch","authenticated_route","exact","unauthenticated_route","ScrollToTop","prevProps","scrollTo","children","Loader","message","loaderState","createSelector","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","App","storage","fetchCategories","user","_this$props2","errorBoundary","scrolltotop","react_toastify","components_header","components_sidebar","common_loader","components_footer","WithLocalStorage","Comp","Storage","allKeys","index","_React$Component","LocalStorage","apply","inherits","createClass","STAG_ENV","URL","env","COMMON_ENV","ENV","process","CONST","objectSpread","SOMETHING_WRONG","Axios","baseURL","BASE_URL","paramsSerializer","qs","axiosInstance","axios","create","interceptors","request","use","headers","token","getAuthToken","reject","response","success","toast","APIS","login","blogs","deleteBlog","addBlog","updateBlog","categories","blogDetails","allblogs","getApiEndPoint","ApiService","_ref$method","method","_ref$appendUrl","appendUrl","resolve","showLoader","hideLoader","appSaga","_ref$data","regenerator_default","wrap","_context","prev","next","put","sent","abrupt","t0","stop","_marked","_context2","takeLatest","_marked2","loginSaga","loggingIn","loginSuccess","loginError","loginSaga_marked","loginSaga_marked2","fetchBlogsData","deleteBlogById","blogsSaga","fetchingBlogs","fetchBlogsSuccess","fetchBlogsError","blogsSaga_marked","_ref2","_ref2$data","deletingBlog","deleteBlogSuccess","deleteBlogError","blogsSaga_marked2","_context3","takeEvery","_marked3","fetchCategoriesData","CategoriesSaga","categoriesSaga_marked","categoriesSaga_marked2","_ref3","_ref3$data","categoriesSaga_marked3","_context4","_marked4","fetchBlogDetail","addBlogSaga","_payload$args","history","isEdit","args","addingBlog","addBlogSuccess","push","addBlogError","addBlogSaga_marked","fetchingBlog","fetchBlogSuccess","fetchBlogError","addBlogSaga_marked2","addBlogSaga_marked3","fetchAllBlogs","taggingSaga_marked","taggingSaga","mark","rootSaga","app","rootSagas_marked","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","createMemoryHistory","initialEntries","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","compose","applyMiddleware","__PRELOADED_STATE__","store","createStore","rootReducer","runSaga","run","Application","es","Router","react_frontload_lib","noServerRender","src_app","root","querySelector","hasChildNodes","preloadReady","hydrate","reselect__WEBPACK_IMPORTED_MODULE_0__","_appConstants__WEBPACK_IMPORTED_MODULE_1__","appState","fetchBlogs","updateFilters","_blogsConstants__WEBPACK_IMPORTED_MODULE_0__","updateFormData","fetchBlog","_addBlogConstants__WEBPACK_IMPORTED_MODULE_0__","_loginConstants__WEBPACK_IMPORTED_MODULE_0__","selectCategory","_taggingConstants__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/main.048cb255.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Icon = ({ name, className }) => {\r\n  return <i className={`icon-${name} ${className ? className : \"\"}`} />;\r\n};\r\n\r\nexport default Icon;\r\n","export const PUBLISH = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Published\"\r\n  },\r\n  {\r\n    id: \"0\",\r\n    name: \"Unpublished\"\r\n  }\r\n];\r\nexport const PUBLISHED_BY = [\r\n  {\r\n    id: \"0\",\r\n    name: \"Admin\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Other\"\r\n  }\r\n];\r\nexport const FEATURED = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\nexport const TRENDING = [\r\n  {\r\n    id: \"0\",\r\n    name: \"No\"\r\n  },\r\n  {\r\n    id: \"1\",\r\n    name: \"Yes\"\r\n  }\r\n];\r\n\r\n// eslint-disable-next-line\r\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default {\r\n  APP_NAME: \"Reactor\",\r\n  ENV_TYPES: {\r\n    PROD: \"prod\",\r\n    STAG: \"stag\",\r\n    LOCAL: \"local\"\r\n  }\r\n};\r\n","export const CATEGORIES_STATE_KEY = \"categories\";\r\nexport const NAMESPACE = \"CATEGORIES/\";\r\n\r\nexport const FETCH_CATEGORY = `${NAMESPACE}FETCH_CATEGORY`;\r\nexport const FETCHING_CATEGORY = `${NAMESPACE}FETCHING_CATEGORY`;\r\nexport const FETCH_CATEGORY_SUCCESS = `${NAMESPACE}FETCH_CATEGORY_SUCCESS`;\r\nexport const FETCH_CATEGORY_ERROR = `${NAMESPACE}FETCH_CATEGORY_ERROR`;\r\n\r\nexport const ADD_CATEGORY = `${NAMESPACE}ADD_CATEGORY`;\r\nexport const ADDING_CATEGORY = `${NAMESPACE}ADDING_CATEGORY`;\r\nexport const ADD_CATEGORY_SUCCESS = `${NAMESPACE}ADD_CATEGORY_SUCCESS`;\r\nexport const ADD_CATEGORY_ERROR = `${NAMESPACE}ADD_CATEGORY_ERROR`;\r\n\r\nexport const DELETE_CATEGORY = `${NAMESPACE}DELETE_CATEGORY`;\r\nexport const DELETEING_CATEGORY = `${NAMESPACE}DELETEING_CATEGORY`;\r\nexport const DELETE_CATEGORY_SUCCESS = `${NAMESPACE}DELETE_CATEGORY_SUCCESS`;\r\nexport const DELETE_CATEGORY_ERROR = `${NAMESPACE}DELETE_CATEGORY_ERROR`;\r\n\r\n","const IMG_PATH = `https://s3.ap-south-1.amazonaws.com/imabhi.in/`;\r\n\r\nexport const ABHISHAR = `${IMG_PATH}abhishar.png`;\r\nexport const ANGULAR = `${IMG_PATH}angular.svg`;\r\nexport const BG_IMG_1 = `${IMG_PATH}bgimg1.png`;\r\nexport const BG_IMG_2 = `${IMG_PATH}bgimg2.png`;\r\nexport const CSS3 = `${IMG_PATH}css-3.svg`;\r\nexport const DAUBLE_LOGO = `${IMG_PATH}daublelogo.png`;\r\nexport const DOCUMENTED_CODE = `${IMG_PATH}DOCUMENTED_CODE.png`;\r\nexport const FACEBOOK = `${IMG_PATH}facebook.svg`;\r\nexport const GITHUB = `${IMG_PATH}github-icon.svg`;\r\nexport const HTML5 = `${IMG_PATH}html-5.svg`;\r\nexport const INSTAGRAM = `${IMG_PATH}instagram-icon.svg`;\r\nexport const JAVASCRIPT = `${IMG_PATH}javascript.svg`;\r\nexport const LOGO = 'https://s3.ap-south-1.amazonaws.com/meuzicassets/meuzic-horizontal-transparent.png';\r\nexport const MAP = `${IMG_PATH}map.png`;\r\nexport const MEDZIN_LOGO = `${IMG_PATH}medzinlogo.png`;\r\nexport const MM_LOGO = `${IMG_PATH}mmlogo.png`;\r\nexport const PIT_LOGO = `${IMG_PATH}pitlogo.png`;\r\nexport const PRO_DAUBLE = `${IMG_PATH}pro-dauble.png`;\r\nexport const PRO_MEDZIN = `${IMG_PATH}pro-medzin.png`;\r\nexport const PRO_MM = `${IMG_PATH}pro-mm.png`;\r\nexport const PRO_PIT = `${IMG_PATH}pro-pit.png`;\r\nexport const PRO_TT = `${IMG_PATH}pro-tt.png`;\r\nexport const REACT = `${IMG_PATH}react.svg`;\r\nexport const REDUX = `${IMG_PATH}redux.svg`;\r\nexport const RESPONSIVE_DESIGN = `${IMG_PATH}RESPONSIVE_DESIGN.png`;\r\nexport const SASS = `${IMG_PATH}sass.svg`;\r\nexport const THIRD_PARTY_INTEGRATION = `${IMG_PATH}THIRD_PARTY%20INTEGRATI_N.png`;\r\nexport const TT_LOGO = `${IMG_PATH}ttlogo.png`;\r\nexport const TWITTER = `${IMG_PATH}twitter.svg`;\r\nexport const UI_FRAMEWORKS = `${IMG_PATH}UI_FRAMEWOKS.png`;\r\n\r\nexport default {};\r\n","export const BLOGS_STATE_KEY = \"blogs\";\r\nexport const NAMESPACE = \"BLOGS/\";\r\n\r\nexport const FETCH_BLOGS = `${NAMESPACE}FETCH_BLOGS`;\r\nexport const FETCHING_BLOGS = `${NAMESPACE}FETCHING_BLOGS`;\r\nexport const FETCH_BLOGS_SUCCESS = `${NAMESPACE}FETCH_BLOGS_SUCCESS`;\r\nexport const FETCH_BLOGS_ERROR = `${NAMESPACE}FETCH_BLOGS_ERROR`;\r\nexport const UPDATE_FILTERS = `${NAMESPACE}UPDATE_FILTERS`;\r\n\r\nexport const DELETE_BLOG = `${NAMESPACE}DELETE_BLOG`;\r\nexport const DELETING_BLOG = `${NAMESPACE}DELETING_BLOG`;\r\nexport const DELETE_BLOG_SUCCESS = `${NAMESPACE}DELETE_BLOG_SUCCESS`;\r\nexport const DELETE_BLOG_ERROR = `${NAMESPACE}DELETE_BLOG_ERROR`;\r\n","export const ADD_BLOG_STATE_KEY = \"addBlog\";\r\nexport const NAMESPACE = \"ADD_BLOG/\";\r\n\r\n// Update Blog Form\r\nexport const UPDATE_FORM_DATA = `${NAMESPACE}UPDATE_FORM_DATA`;\r\n\r\n// Add/Update Blog\r\nexport const ADD_BLOG = `${NAMESPACE}ADD_BLOG`;\r\nexport const ADDING_BLOG = `${NAMESPACE}ADDING_BLOG`;\r\nexport const ADD_BLOG_SUCCESS = `${NAMESPACE}ADD_BLOG_SUCCESS`;\r\nexport const ADD_BLOG_ERROR = `${NAMESPACE}ADD_BLOG_ERROR`;\r\n\r\n// Fetch Blog Detail\r\nexport const FETCH_BLOG = `${NAMESPACE}FETCH_BLOG`;\r\nexport const FETCHING_BLOG = `${NAMESPACE}FETCHING_BLOG`;\r\nexport const FETCH_BLOG_SUCCESS = `${NAMESPACE}FETCH_BLOG_SUCCESS`;\r\nexport const FETCH_BLOG_ERROR = `${NAMESPACE}FETCH_BLOG_ERROR`;\r\n","import QueryString from \"query-string\";\r\n\r\n// A nice helper to tell us if we're on the server\r\nexport const isServer = !(\r\n  typeof window !== \"undefined\" &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\n// Set Values in local storage\r\nexport const setLocalStorage = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\n// Get Values from local storage\r\nexport const getLocalStorage = key => {\r\n  let data = localStorage.getItem(key);\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  }\r\n  return undefined;\r\n};\r\n\r\n// Find a value in arr of objects by id\r\nexport const findValueById = (arr, id) => {\r\n  let list = arr.filter(item => item.id === id)[0];\r\n  if (list) {\r\n    return list.name;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n\r\n// Process Query Params for API Payload\r\nexport const processQueryParams = (location, storeFilters) => {\r\n  let queryParams = QueryString.parse(location.search, {\r\n    ignoreQueryPrefix: true\r\n  });\r\n  if (\r\n    queryParams &&\r\n    queryParams.category &&\r\n    typeof queryParams.category === \"string\"\r\n  ) {\r\n    queryParams.category = [queryParams.category];\r\n  }\r\n  const payload = { ...storeFilters, ...queryParams };\r\n  payload.limit = queryParams.limit\r\n    ? parseInt(queryParams.limit)\r\n    : storeFilters.limit;\r\n  payload.offset = queryParams.offset\r\n    ? parseInt(queryParams.offset)\r\n    : storeFilters.offset;\r\n  return payload;\r\n};\r\n\r\n// Remove all the empty & null value keys from the object\r\nexport const cleanObject = object => {\r\n  let cleanObject = {};\r\n  let keys = Object.keys(object);\r\n  if (keys) {\r\n    keys.forEach(key => {\r\n      let value = object[key];\r\n      if (value !== \"\" && value !== null && value.length !== 0) {\r\n        cleanObject[key] = value;\r\n      }\r\n    });\r\n  }\r\n  return cleanObject;\r\n};\r\n","import {\r\n  FETCH_CATEGORY,\r\n  FETCHING_CATEGORY,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_CATEGORY_ERROR,\r\n  ADD_CATEGORY,\r\n  ADDING_CATEGORY,\r\n  ADD_CATEGORY_SUCCESS,\r\n  ADD_CATEGORY_ERROR,\r\n  DELETE_CATEGORY,\r\n  DELETEING_CATEGORY,\r\n  DELETE_CATEGORY_SUCCESS,\r\n  DELETE_CATEGORY_ERROR\r\n} from \"./categoriesConstants\";\r\n\r\nexport const fetchCategory = data => ({ type: FETCH_CATEGORY, data });\r\nexport const fetchingCategory = () => ({ type: FETCHING_CATEGORY });\r\nexport const fetchCategorySuccess = data => ({\r\n  type: FETCH_CATEGORY_SUCCESS,\r\n  data\r\n});\r\nexport const fetchCategoryError = data => ({\r\n  type: FETCH_CATEGORY_ERROR,\r\n  data\r\n});\r\n\r\nexport const addCategory = data => ({ type: ADD_CATEGORY, data });\r\nexport const addingCategory = () => ({ type: ADDING_CATEGORY });\r\nexport const addCategorySuccess = data => ({\r\n  type: ADD_CATEGORY_SUCCESS,\r\n  data\r\n});\r\nexport const addCategoryError = data => ({\r\n  type: ADD_CATEGORY_ERROR,\r\n  data\r\n});\r\n\r\nexport const deleteCategory = data => ({ type: DELETE_CATEGORY, data });\r\nexport const deletingCategory = () => ({ type: DELETEING_CATEGORY });\r\nexport const deleteCategorySuccess = data => ({\r\n  type: DELETE_CATEGORY_SUCCESS,\r\n  data\r\n});\r\nexport const deleteCategoryError = data => ({\r\n  type: DELETE_CATEGORY_ERROR,\r\n  data\r\n});\r\n","export const APP_STATE_KEY = \"app\";\r\nexport const NAMESPACE = \"APP/\";\r\nexport const SET_DATA = `${NAMESPACE}SET_DATA`;\r\nexport const LOGOUT = `${NAMESPACE}LOGOUT`;\r\nexport const LOGGING_OUT = `${NAMESPACE}LOGGING_OUT`;\r\nexport const LOGOUT_SUCEESS = `${NAMESPACE}LOGOUT_SUCEESS`;\r\nexport const LOGOUT_ERROR = `${NAMESPACE}LOGOUT_ERROR`;\r\n\r\n\r\n","export const TAGGING_STATE_KEY = 'tagging';\r\nexport const NAMESPACE = 'TAGGING/';\r\n\r\nexport const FETCH_BLOGS = `${NAMESPACE}FETCH_BLOGS`;\r\nexport const FETCHING_BLOGS = `${NAMESPACE}FETCHING_BLOGS`;\r\nexport const FETCH_BLOGS_SUCCESS = `${NAMESPACE}FETCH_BLOGS_SUCCESS`;\r\nexport const FETCH_BLOGS_ERROR = `${NAMESPACE}FETCH_BLOGS_ERROR`;\r\n\r\nexport const SELECT_CATEGORY = `${NAMESPACE}SELECT_CATEGORY`;\r\n","export const LOGIN_STATE_KEY = \"login\";\r\nexport const NAMESPACE = \"LOGIN/\";\r\nexport const LOGIN = `${NAMESPACE}LOGIN`;\r\nexport const LOGGING_IN = `${NAMESPACE}LOGGING_IN`;\r\nexport const LOGIN_SUCCESS = `${NAMESPACE}LOGIN_SUCCESS`;\r\nexport const LOGIN_ERROR = `${NAMESPACE}LOGIN_ERROR`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SET_DATA, LOGOUT_SUCEESS\r\n} from \"./appConstants\";\r\n\r\nconst appInitialState = fromJS({\r\n  isLoggedIn: false,\r\n  sidebar: true,\r\n});\r\n\r\nexport default  (state = appInitialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA:\r\n      return state.merge(fromJS(action.data));\r\n    case LOGOUT_SUCEESS:\r\n      return state.merge(appInitialState);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { HOME_SAVE_USERS } from \"./HomeConstants\";\r\n\r\nconst initialState = { home: \"HomePage\" };\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case HOME_SAVE_USERS:\r\n      return Object.assign({}, state, { users: payload });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { LOGIN_SUCCESS, LOGIN_ERROR, LOGGING_IN } from \"./loginConstants\";\r\nimport { fromJS } from \"immutable\";\r\n\r\nconst initialState = fromJS({\r\n  isLoggingIn: false\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGGING_IN:\r\n      return state.set('isLoggingIn', action.value);\r\n    case LOGIN_SUCCESS:\r\n    case LOGIN_ERROR:\r\n      return state.set('isLoggingIn', false).merge(action.data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n  FETCHING_BLOGS,\r\n  FETCH_BLOGS_SUCCESS,\r\n  FETCH_BLOGS_ERROR,\r\n  UPDATE_FILTERS,\r\n  DELETING_BLOG,\r\n  DELETE_BLOG_ERROR,\r\n  DELETE_BLOG_SUCCESS\r\n} from \"./blogsConstants\";\r\n\r\nconst initialState = fromJS({\r\n  isFetching: false,\r\n  filters: {\r\n    title: \"\",\r\n    isTrending: \"\",\r\n    isFeatured: \"\",\r\n    offset: 0,\r\n    limit: 10,\r\n    category: [],\r\n  },\r\n  data: [],\r\n  error: false,\r\n  isDeleting: false,\r\n});\r\n\r\nconst BlogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCHING_BLOGS:\r\n      return state.set('isFetching', true)\r\n    case DELETING_BLOG:\r\n    return state.set('isDeleting', true)\r\n    case FETCH_BLOGS_SUCCESS:\r\n      return state.set('isFetching',false).set('data',action.data)\r\n    case DELETE_BLOG_SUCCESS:\r\n      const data = state.get('data').filter(blog => blog._id !== action.data);\r\n      return state.set(\"isFetching\", false).set('data',data);\r\n    case FETCH_BLOGS_ERROR:\r\n    case DELETE_BLOG_ERROR:\r\n      return state.set('isDeleting', false).set('error', action.err).set('isFetching', false)\r\n    case UPDATE_FILTERS:\r\n      return state.merge({filters: action.filters});\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default BlogsReducer;\r\n","import {\r\n  FETCHING_CATEGORY,\r\n  FETCH_CATEGORY_SUCCESS,\r\n  FETCH_CATEGORY_ERROR,\r\n  ADDING_CATEGORY,\r\n  DELETEING_CATEGORY,\r\n  ADD_CATEGORY_SUCCESS,\r\n  DELETE_CATEGORY_SUCCESS\r\n} from \"./categoriesConstants\";\r\nimport { fromJS } from \"immutable\";\r\n\r\nconst initialState = fromJS({\r\n  isFetching: false,\r\n  data: [],\r\n  error: false\r\n});\r\n\r\nconst CategoriesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCHING_CATEGORY:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_CATEGORY_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"data\", action.data);\r\n    case FETCH_CATEGORY_ERROR:\r\n      return state\r\n        .set(\"isFetching\", false)\r\n        .set(\"data\", [])\r\n        .set(\"error\", action.data);\r\n    case ADDING_CATEGORY:\r\n      return state.set(\"isAdding\", true);\r\n    case ADD_CATEGORY_SUCCESS:\r\n      let cats = state.get(\"data\").concat([action.data]);\r\n      return state.set(\"isAdding\", false).set(\"data\", cats);\r\n    case DELETEING_CATEGORY:\r\n      return state.set(\"isDeleting\", true);\r\n    case DELETE_CATEGORY_SUCCESS:\r\n      let restCats = state.get(\"data\").filter(cat => cat._id !== action.data);\r\n      return state.set(\"isAdding\", false).set(\"data\", restCats);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CategoriesReducer;\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n  ADDING_BLOG,\r\n  ADD_BLOG_SUCCESS,\r\n  ADD_BLOG_ERROR,\r\n  UPDATE_FORM_DATA,\r\n  FETCHING_BLOG,\r\n  FETCH_BLOG_SUCCESS,\r\n  FETCH_BLOG_ERROR\r\n} from \"./addBlogConstants\";\r\n\r\nconst formData = {\r\n  title: \"\",\r\n  author: \"\",\r\n  keywords: \"\",\r\n  image: \"\",\r\n  imageSrc: \"\",\r\n  story: \"\",\r\n  category: [],\r\n  isPublished: 1,\r\n  publishedBy: 0,\r\n  isFeatured: 0,\r\n  isTrending: 0,\r\n  viewsCount: 0,\r\n  sharedCount: 0,\r\n  createdDate: new Date(),\r\n  updatedDate: new Date(),\r\n  publishedDate: new Date()\r\n};\r\n\r\nconst initialState = fromJS({\r\n  formData: formData,\r\n  error: null,\r\n  isAdding: false\r\n});\r\n\r\nconst AddBlogReducer = (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case UPDATE_FORM_DATA:\r\n      let formData = state.get(\"formData\");\r\n      let updatedFormData = formData.merge(data);\r\n      return state.set(\"formData\", updatedFormData);\r\n    case ADDING_BLOG:\r\n      return state.set(\"isAdding\", true);\r\n    case ADD_BLOG_SUCCESS:\r\n      return state.merge(initialState);\r\n    case ADD_BLOG_ERROR:\r\n      return state.set(\"isAdding\", false).set(\"error\", data);\r\n    case FETCHING_BLOG:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_BLOG_SUCCESS:\r\n      return state.merge({\"isFetching\": false, \"formData\": data});\r\n    case FETCH_BLOG_ERROR:\r\n      return state.set(\"isFetching\", false).set(\"error\", data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AddBlogReducer;\r\n","export const LOADER_STATE_KEY = 'loader';\r\n\r\nexport const NAMESPACE = \"LOADER/\";\r\nexport const SHOW_LOADER = `${NAMESPACE}SHOW`;\r\nexport const HIDE_LOADER = `${NAMESPACE}HIDE`;\r\n","import { fromJS } from \"immutable\";\r\n\r\nimport {\r\n  SHOW_LOADER,\r\n  HIDE_LOADER\r\n} from \"./loaderConstants\";\r\n\r\n\r\nconst loaderInitialState = fromJS({\r\n  value: false\r\n});\r\n\r\nexport default (state = loaderInitialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return state.set(\"value\", true).set(\"message\", action.data);\r\n    case HIDE_LOADER:\r\n    return state.set(\"value\", false).set(\"message\", undefined);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { fromJS } from \"immutable\";\r\nimport {\r\n  FETCHING_BLOGS,\r\n  FETCH_BLOGS_SUCCESS,\r\n  FETCH_BLOGS_ERROR,\r\n  SELECT_CATEGORY\r\n} from \"./taggingConstants\";\r\n\r\nconst initialState = fromJS({\r\n  selectedCategory: null,\r\n  isFetching: false,\r\n  data: [],\r\n  error: null\r\n});\r\n\r\nconst taggingReducer = (state = initialState, { type, data }) => {\r\n  switch (type) {\r\n    case FETCHING_BLOGS:\r\n      return state.set(\"isFetching\", true);\r\n    case FETCH_BLOGS_SUCCESS:\r\n      return state.set(\"isFetching\", false).set(\"data\", data);\r\n    case FETCH_BLOGS_ERROR:\r\n      return state\r\n        .set(\"isFetching\", false)\r\n        .set(\"data\", [])\r\n        .set(\"error\", data);\r\n    case SELECT_CATEGORY:\r\n    return state.set(\"selectedCategory\", data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taggingReducer;\r\n","import { combineReducers } from \"redux-immutable\";\r\n\r\n// App Reducer\r\nimport { APP_STATE_KEY } from \"./app/appConstants\";\r\nimport AppReducer from \"./app/appReducer\";\r\n\r\n// Home Reducer\r\nimport { HOME_STATE_KEY } from \"./app/routes/home/HomeConstants\";\r\nimport HomeReducer from \"./app/routes/home/HomeReducer\";\r\n\r\n// Login Reducer\r\nimport { LOGIN_STATE_KEY } from \"./app/routes/login/loginConstants\";\r\nimport LoginReducer from \"./app/routes/login/loginReducer\";\r\n\r\n// Blogs Reducer\r\nimport { BLOGS_STATE_KEY } from \"./app/routes/blogs/blogsConstants\";\r\nimport BlogsReducer from \"./app/routes/blogs/blogsReducer\";\r\n\r\n// Categories Reducer\r\nimport { CATEGORIES_STATE_KEY } from \"./app/routes/categories/categoriesConstants\";\r\nimport CategoriesReducer from \"./app/routes/categories/categoriesReduer\";\r\n\r\n// Add Blog Reducer\r\nimport { ADD_BLOG_STATE_KEY } from \"./app/routes/addblog/addBlogConstants\";\r\nimport AddBlogReducer from \"./app/routes/addblog/addBlogReducer\";\r\n\r\n// Loader Reducer\r\nimport { LOADER_STATE_KEY } from \"./app/components/common/loader/loaderConstants\";\r\nimport loaderReducer from \"./app/components/common/loader/loaderReducer\";\r\n\r\n// Tagging Reducer\r\nimport { TAGGING_STATE_KEY } from \"./app/routes/tagging/taggingConstants\";\r\nimport taggingReducer from \"./app/routes/tagging/taggingReducer\";\r\n\r\n// Combine All Reducers\r\nexport default combineReducers({\r\n  [APP_STATE_KEY]: AppReducer,\r\n  [LOADER_STATE_KEY]: loaderReducer,\r\n  [HOME_STATE_KEY]: HomeReducer,\r\n  [LOGIN_STATE_KEY]: LoginReducer,\r\n  [BLOGS_STATE_KEY]: BlogsReducer,\r\n  [CATEGORIES_STATE_KEY]: CategoriesReducer,\r\n  [ADD_BLOG_STATE_KEY]:AddBlogReducer,\r\n  [TAGGING_STATE_KEY] : taggingReducer\r\n});\r\n","export const HOME_STATE_KEY = \"home\";\r\nexport const HOME_SAVE_USERS = \"HOME_SAVE_USERS\";\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SET_DATA,\r\n  LOGOUT,\r\n  LOGGING_OUT,\r\n  LOGOUT_SUCEESS,\r\n  LOGOUT_ERROR\r\n} from \"./appConstants\";\r\n\r\n// APP DATA\r\nexport const setAppData = data => ({ type: SET_DATA, data });\r\n\r\n// LOG OUT\r\nexport const logout = () => ({ type: LOGOUT });\r\nexport const loggingOut = () => ({ type: LOGGING_OUT });\r\nexport const logoutSuccess = () => ({ type: LOGOUT_SUCEESS });\r\nexport const logoutError = () => ({ type: LOGOUT_ERROR });\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.scss\";\r\nimport { LOGO } from \"../../assets/imgs\";\r\nimport Icon from \"../common/Icon\";\r\n\r\nclass Header extends React.PureComponent {\r\n\r\n  renderLogo = () => {\r\n    return (\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">\r\n          <img src={LOGO} alt=\"logo\" />\r\n        </Link>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderMenu = () => {\r\n    return (\r\n      <div className=\"menu\">\r\n        <ul>\r\n          <li onClick={this.props.logout}>\r\n            <Icon name=\"logout\" /> Logout\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  toggleSideBar = () => {\r\n    const { setAppData, sidebar } = this.props;\r\n    setAppData({ sidebar: !sidebar });\r\n  };\r\n\r\n  renderToggleBtn = () => {\r\n    const { sidebar } = this.props;\r\n    if (sidebar) {\r\n      return (\r\n        <div className=\"toggle\" onClick={this.toggleSideBar}>\r\n          <Icon name=\"list\" />\r\n          Hide\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"toggle\" onClick={this.toggleSideBar}>\r\n        <Icon name=\"list\" />\r\n        Show\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"header\">\r\n        {this.renderLogo()}\r\n        {this.renderToggleBtn()}\r\n        {this.renderMenu()}\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { connect } from \"react-redux\";\r\nimport Header from \"./header\";\r\nimport { setAppData, logout } from \"../../appActions\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { makeSelectSidebar } from \"../../appSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  sidebar: makeSelectSidebar()\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setAppData: data => dispatch(setAppData(data)),\r\n  logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    let year = new Date().getFullYear();\r\n    const { sidebar } = this.props;\r\n    return (\r\n      <footer className={sidebar ? 'footer' : 'footer-no-sidebar'}>\r\n       Meuzic Copyright © {year} <span className='float-right'>Made with <span role='img' aria-label='heart'>💖</span> by <a href=\"http://abhijangir.me\">Abhishar Jangir.</a></span>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport \"./sidebar.scss\";\r\n\r\nclass Sidebar extends React.PureComponent {\r\n  isActive = url => {\r\n    const { location } = this.props;\r\n    const path = location ? location.pathname : \"\";\r\n    if (url === undefined && path === \"/\") {\r\n      return \"active\";\r\n    }\r\n    if (path !== \"/\" && path.includes(url)) {\r\n      return \"active\";\r\n    }\r\n\r\n    return \"\";\r\n  };\r\n\r\n  render() {\r\n    const { sidebar } = this.props;\r\n    if (sidebar) {\r\n      return (\r\n        <div className=\"sidebar\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\" className={this.isActive()}>\r\n                Dashboard\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/blogs\" className={this.isActive(\"blog\")}>\r\n                Blogs\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/categories\" className={this.isActive(\"categories\")}>\r\n                Categories\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/tagging\" className={this.isActive(\"tagging\")}>\r\n                Category Tagging\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","import { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport Sidebar from \"./sidebar\";\r\nimport { setAppData } from \"../../appActions\";\r\nimport { makeSelectSidebar } from '../../appSelectors';\r\nconst mapStateToProps = createStructuredSelector({\r\n  sidebar: makeSelectSidebar()\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setAppData: data => dispatch(setAppData(data))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Sidebar)\r\n);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { makeSelectIsLoggedIn } from '../../appSelectors';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      rest.isLoggedIn ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to={`/login?redirect=${props.location.pathname}`} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoggedIn: makeSelectIsLoggedIn()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AuthenticatedRoute);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport queryString from 'query-string';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { makeSelectIsLoggedIn } from '../../appSelectors';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst UnauthenticatedRoute = ({ component: Component, ...rest }) => {\r\n  let query = queryString.parse(rest.location.search);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        !rest.isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={query.redirect || '/'} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoggedIn: makeSelectIsLoggedIn()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(UnauthenticatedRoute);\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Loadable from \"react-loadable\";\r\nimport AuthenticatedRoute from \"../components/authenticated-route\";\r\nimport UnauthenticatedRoute from \"../components/unauthenticated-route\";\r\n\r\nconst Home = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"home\" */ \"./home\"),\r\n  loading: () => null\r\n});\r\n\r\nconst Signup = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"signup\" */ \"./signup\"),\r\n  loading: () => null\r\n});\r\n\r\nconst Login = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"login\" */ \"./login\"),\r\n  loading: () => null\r\n});\r\n\r\nconst ForgotPassword = Loadable({\r\n  loader: () =>\r\n    import(/* webpackChunkName: \"forgetpassword\" */ \"./forgetpassword\"),\r\n  loading: () => null\r\n});\r\n\r\nconst NotFound = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"notfound\" */ \"./notfound\"),\r\n  loading: () => null\r\n});\r\n\r\nconst Blogs = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"blogs\" */ \"./blogs\"),\r\n  loading: () => null\r\n});\r\n\r\nconst Categories = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"categories\" */ \"./categories\"),\r\n  loading: () => null\r\n});\r\n\r\nconst AddBlog = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"addblog\" */ \"./addblog\"),\r\n  loading: () => null\r\n});\r\n\r\nconst Tagging = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"tagging\" */ \"./tagging\"),\r\n  loading: () => null\r\n});\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <AuthenticatedRoute exact path=\"/\" component={Home} />\r\n    <AuthenticatedRoute path=\"/categories\" component={Categories} />\r\n    <AuthenticatedRoute path=\"/blogs\" component={Blogs} />\r\n    <AuthenticatedRoute path=\"/blog/edit/:blogId\" component={AddBlog} />\r\n    <AuthenticatedRoute path=\"/blog/add\" component={AddBlog} />\r\n    <AuthenticatedRoute path=\"/tagging\" component={Tagging} />\r\n    <UnauthenticatedRoute path=\"/signup\" component={Signup} />\r\n    <UnauthenticatedRoute path=\"/login\" component={Login} />\r\n    <UnauthenticatedRoute path=\"/forgotpassword\" component={ForgotPassword} />\r\n    <Route component={NotFound} />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\nimport \"./loader.scss\";\r\nconst Loader = ({ value, message }) => {\r\n  return value ? (\r\n    <div className=\"loader\">{message || \"Loading... Please wait!\"}</div>\r\n  ) : null;\r\n};\r\n\r\nexport default Loader;\r\n\r\n/* <div className=\"loader-container\">\r\n            <div className=\"dot dot-1\"></div>\r\n            <div className=\"dot dot-2\"></div>\r\n            <div className=\"dot dot-3\"></div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\r\n                <defs>\r\n                    <filter id=\"goo\">\r\n                        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\r\n                        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 21 -7\" />\r\n                    </filter>\r\n                </defs>\r\n            </svg>\r\n        </div> */\r\n","import { createSelector } from \"reselect\";\r\nimport { LOADER_STATE_KEY } from \"./loaderConstants\";\r\n\r\n// Select App State\r\nexport const loaderState = state => state.get(LOADER_STATE_KEY);\r\n\r\n// Select loader -> value\r\nexport const makeSelectLoaderValue = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"value\")\r\n  );\r\n\r\n  // Select loader -> message\r\nexport const makeSelectLoaderMessage = () =>\r\n  createSelector(\r\n    loaderState,\r\n    loader => loader.get(\"message\")\r\n  );\r\n","import { connect } from \"react-redux\";\r\nimport Loader from \"./loader\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n  makeSelectLoaderValue,\r\n  makeSelectLoaderMessage\r\n} from \"./loaderSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  value: makeSelectLoaderValue(),\r\n  message: makeSelectLoaderMessage()\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Loader);\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, info);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport Sidebar from \"./components/sidebar\";\r\nimport Routes from \"./routes\";\r\nimport ScrollToTop from \"./components/scrolltotop\";\r\nimport Loader from \"./components/common/loader\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\nclass App extends Component {\r\n  componentWillMount() {\r\n    const { storage, setAppData, fetchCategories } = this.props;\r\n    if (storage.isLoggedIn && storage.user) {\r\n      setAppData({ isLoggedIn: true,});\r\n      fetchCategories();\r\n    } else {\r\n      setAppData({ isLoggedIn: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, sidebar } = this.props;\r\n    if (isLoggedIn) {\r\n      return (\r\n        <ErrorBoundary>\r\n          <ScrollToTop>\r\n            <div id=\"app\">\r\n              <ToastContainer />\r\n              <Header />\r\n              <div id=\"content\" className=\"content\">\r\n                <Sidebar />\r\n                <div className={sidebar ? \"main\" : \"main-no-sidebar\"}>\r\n                  <Routes />\r\n                </div>\r\n                <Loader />\r\n                <Footer sidebar={sidebar} />\r\n              </div>\r\n            </div>\r\n          </ScrollToTop>\r\n        </ErrorBoundary>\r\n      );\r\n    } else {\r\n      return (\r\n        <ErrorBoundary>\r\n          <ScrollToTop>\r\n            <div id=\"app\">\r\n              <ToastContainer />\r\n              <div id=\"content\" className=\"content\">\r\n                <div className=\"main-guest-user\">\r\n                  <Routes />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Loader />\r\n          </ScrollToTop>\r\n        </ErrorBoundary>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { getLocalStorage, isServer } from \"../../utils/common\";\r\n\r\nconst WithLocalStorage = Comp => {\r\n  let storage = {};\r\n  if (typeof Storage !== undefined && !isServer) {\r\n    let allKeys = Object.keys(localStorage);\r\n    for (let index = 0; index < allKeys.length; index++) {\r\n      storage[allKeys[index]] = getLocalStorage(allKeys[index]);\r\n    }\r\n  }\r\n  return class LocalStorage extends React.Component {\r\n    render() {\r\n      return <Comp storage={storage} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default WithLocalStorage;\r\n","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setAppData } from './appActions';\r\nimport App from './app';\r\nimport WithLocalStorage from './components/withLocalStorage';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { makeSelectIsLoggedIn, makeSelectSidebar } from './appSelectors';\r\nimport { fetchCategory } from './routes/categories/categoriesActions';\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoggedIn: makeSelectIsLoggedIn(),\r\n  sidebar: makeSelectSidebar()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAppData: (data) => dispatch(setAppData(data)),\r\n    fetchCategories: () => dispatch(fetchCategory())\r\n  };\r\n}\r\n\r\nexport default WithLocalStorage(withRouter(connect(mapStateToProps, mapDispatchToProps)(App)));\r\n","import CONST from \"./index\";\r\n\r\nconst STAG_ENV = {\r\n  URL: \"http://18.224.169.160:8080/\",\r\n  env: \"Staging\"\r\n};\r\n\r\nconst PROD_ENV = {\r\n  URL: \"http://api.abhijangir.me/\",\r\n  env: \"Production\"\r\n};\r\n\r\nconst LOCAL_ENV = {\r\n  URL: \"http://localhost:5000/\",\r\n  env: \"Local\"\r\n};\r\n\r\nconst COMMON_ENV = {\r\n  // Add here if there is any `COMMON ENVIRONMENT VARIABLES`\r\n};\r\n\r\nlet app_env = process.env.REACT_APP_ENV;\r\n\r\nlet ENV = {};\r\n\r\nswitch (app_env) {\r\n  case CONST.ENV_TYPES.PROD:\r\n    ENV = { ...PROD_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.STAG:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  case CONST.ENV_TYPES.LOCAL:\r\n    ENV = { ...LOCAL_ENV, ...COMMON_ENV };\r\n    break;\r\n\r\n  default:\r\n    ENV = { ...STAG_ENV, ...COMMON_ENV };\r\n    break;\r\n}\r\n\r\nexport default ENV;\r\n","export const SOMETHING_WRONG = \"Oops! Somthing went wrong.\";\r\nexport const AUTH_FAILED = \"Authentication Failed!\";\r\n","import axios from 'axios';\r\nimport qs from 'query-string';\r\nimport ENV from '../constants/config';\r\nimport { getLocalStorage, setLocalStorage } from './common';\r\nimport { AUTH_FAILED } from '../constants/messages';\r\nimport { toast } from 'react-toastify';\r\n\r\n// FETCH TOKEN from localStorage for every request\r\nconst getAuthToken = () => {\r\n  const user = getLocalStorage('user');\r\n  if(user && user.token) {\r\n    return user.token;\r\n  }\r\n  return null;\r\n}\r\n\r\nconst Axios = (baseURL) => {\r\n  // AXIOS CONFIGRATION\r\n  let config = {\r\n    baseURL : baseURL || ENV.BASE_URL,\r\n    // timeout : 5000, //\r\n    paramsSerializer: function(queryParams) {\r\n      return qs.stringify(queryParams)\r\n    }\r\n  };\r\n\r\n  // CREATE NEW AXIOS INSTANCE\r\n  let axiosInstance = axios.create(config);\r\n\r\n  // REQUEST INTERCEPTOR\r\n  axiosInstance.interceptors.request.use((config) => {\r\n    config.headers['token'] =  getAuthToken();\r\n    return config;\r\n  }, (error) => {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  // RESPONSE INTERCEPTOR\r\n  axiosInstance.interceptors.response.use((response) => {\r\n    if (response.data.success) { // RESPONSE_CODE CAN BE CAHNGE\r\n\r\n    }\r\n    // Handle Authentication Failed\r\n    if(!response.data.success && response.data.message === AUTH_FAILED) {\r\n      toast.error(AUTH_FAILED);\r\n      setLocalStorage(\"isLoggedIn\", false);\r\n      setLocalStorage(\"user\", null);\r\n    }\r\n    return response;\r\n  }, (error) => {\r\n    return Promise.reject(error);\r\n  });\r\n  return axiosInstance;\r\n}\r\n\r\n// EXPORT A NEW AXIOS INSTANCE\r\nexport default Axios(ENV.URL);\r\n","const APIS = {\r\n  login: \"signin\",\r\n  logout: \"signout\",\r\n  blogs: \"stories/filter\",\r\n  deleteBlog: \"story/delete\",\r\n  addBlog: \"story/add\",\r\n  updateBlog:\"story/update\",\r\n  categories: \"categories\",\r\n  addCategory:\"category/add\",\r\n  deleteCategory:\"category/delete\",\r\n  blogDetails: \"story\",\r\n  allblogs: \"stories\"\r\n};\r\n\r\nconst getApiEndPoint = name => {\r\n  if (name && APIS[name]) return APIS[name];\r\n  return \"\";\r\n};\r\n\r\nexport default getApiEndPoint;\r\n","import axios from \"./axios\";\r\nimport getApiEndPoint from \"../apis\";\r\n\r\nconst ApiService = ({ method = \"GET\", url, data, appendUrl = '' }) => {\r\n  url = getApiEndPoint(url) + appendUrl;\r\n  return new Promise((resolve, reject) => {\r\n    axios({ url, method, data })\r\n      .then(response => {\r\n        resolve({ ...response });\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport default ApiService;\r\n","import { SHOW_LOADER, HIDE_LOADER } from \"./loaderConstants\";\r\n\r\nexport const showLoader = data => ({\r\n  type: SHOW_LOADER,\r\n  data\r\n});\r\nexport const hideLoader = () => ({\r\n  type: HIDE_LOADER\r\n});\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  loggingOut,\r\n  logoutSuccess,\r\n  logoutError\r\n} from \"./appActions\";\r\nimport ApiService from \"./utils/services\";\r\nimport { LOGOUT } from \"./appConstants\";\r\nimport { showLoader, hideLoader } from \"./components/common/loader/loaderActions\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SOMETHING_WRONG } from \"./constants/messages\";\r\nimport { setLocalStorage } from \"./utils/common\";\r\n\r\n\r\nfunction* logout(payload) {\r\n  try {\r\n    yield put(showLoader('Logging out...Please wait!'))\r\n    yield put(loggingOut());\r\n    const { data:{success, message} } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"logout\"\r\n    });\r\n\r\n    if (success) {\r\n      setLocalStorage(\"isLoggedIn\", false);\r\n      setLocalStorage(\"user\", null);\r\n      yield put(hideLoader());\r\n      return yield put(logoutSuccess());\r\n    } else {\r\n      yield put(hideLoader());\r\n      return yield put(logoutError(message));\r\n    }\r\n  } catch (error) {\r\n    yield put(hideLoader());\r\n    toast.error(SOMETHING_WRONG);\r\n    return yield put(logoutError(error));\r\n  }\r\n}\r\n\r\nexport function* appSaga() {\r\n  yield takeLatest(LOGOUT, logout);\r\n}\r\n\r\nexport default appSaga;\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { LOGIN } from \"./loginConstants\";\r\nimport { loginError, loggingIn, loginSuccess } from \"./loginActions\";\r\nimport ApiService from \"../../utils/services\";\r\nimport { setAppData } from \"../../appActions\";\r\nimport { showLoader, hideLoader } from '../../components/common/loader/loaderActions';\r\nimport { setLocalStorage } from \"../../utils/common\";\r\nimport { toast } from \"react-toastify\";\r\nimport { fetchCategory } from \"../categories/categoriesActions\";\r\n\r\nfunction* login(payload) {\r\n  try {\r\n    yield put(loggingIn(true));\r\n    yield put(showLoader(\"Logging In...Please wait!\"));\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"POST\",\r\n      url: \"login\",\r\n      data: payload.data\r\n    });\r\n\r\n    if (success) {\r\n      setLocalStorage(\"isLoggedIn\", true);\r\n      setLocalStorage(\"user\", data);\r\n      yield put(setAppData({isLoggedIn: true }));\r\n      yield put(loginSuccess());\r\n      yield put(hideLoader());\r\n      return yield put(fetchCategory());\r\n    } else {\r\n      yield put(hideLoader());\r\n      toast.error(message);\r\n      return yield put(loginError(message));\r\n    }\r\n  } catch (error) {\r\n    yield put(hideLoader());\r\n    return yield put(loginError(error));\r\n  }\r\n}\r\n\r\nexport function* loginSaga() {\r\n  yield takeLatest(LOGIN, login);\r\n}\r\n\r\nexport default loginSaga;\r\n","import { call, put, takeLatest, takeEvery } from \"redux-saga/effects\";\r\nimport { FETCH_BLOGS, DELETE_BLOG } from \"./blogsConstants\";\r\n\r\nimport {\r\n  fetchBlogsSuccess,\r\n  fetchBlogsError,\r\n  fetchingBlogs,\r\n  deletingBlog,\r\n  deleteBlogSuccess,\r\n  deleteBlogError\r\n} from \"./blogsActions\";\r\n\r\nimport ApiService from \"../../utils/services\";\r\n\r\n// Fetch All Blogs from API\r\nfunction* fetchBlogsData(payload) {\r\n  try {\r\n    yield put(fetchingBlogs());\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"POST\",\r\n      url: \"blogs\",\r\n      data: payload.data\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchBlogsSuccess(data));\r\n    } else {\r\n      return yield put(fetchBlogsError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchBlogsError(err));\r\n  }\r\n}\r\n\r\n// DELETE Blog by blogId\r\nfunction* deleteBlogById(payload) {\r\n  try {\r\n    yield put(deletingBlog());\r\n    const {\r\n      data: { success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"DELETE\",\r\n      url: \"deleteBlog\",\r\n      appendUrl: `/${payload.data}`\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(deleteBlogSuccess(payload.data));\r\n    } else {\r\n      return yield put(deleteBlogError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(deleteBlogError(err));\r\n  }\r\n}\r\n\r\nexport function* blogsSaga() {\r\n  yield takeLatest(FETCH_BLOGS, fetchBlogsData);\r\n  yield takeEvery(DELETE_BLOG, deleteBlogById);\r\n}\r\n\r\nexport default blogsSaga;\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  fetchingCategory,\r\n  fetchCategorySuccess,\r\n  fetchCategoryError,\r\n  addingCategory,\r\n  addCategorySuccess,\r\n  addCategoryError,\r\n  deletingCategory,\r\n  deleteCategorySuccess,\r\n  deleteCategoryError\r\n} from \"./categoriesActions\";\r\n\r\nimport ApiService from \"../../utils/services\";\r\nimport { FETCH_CATEGORY, ADD_CATEGORY, DELETE_CATEGORY } from \"./categoriesConstants\";\r\nimport { toast } from \"react-toastify\";\r\nimport { SOMETHING_WRONG } from \"../../constants/messages\";\r\n\r\n// Fetch All Categories from API\r\nfunction* fetchCategoriesData(payload) {\r\n  try {\r\n    yield put(fetchingCategory());\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"categories\"\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchCategorySuccess(data));\r\n    } else {\r\n      return yield put(fetchCategoryError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchCategoryError(err));\r\n  }\r\n}\r\n\r\n// Add New Category\r\nfunction* addCategory(payload) {\r\n  try {\r\n    yield put(addingCategory());\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"POST\",\r\n      url: \"addCategory\",\r\n      data: payload.data,\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(addCategorySuccess({...data, ...payload.data}));\r\n    } else {\r\n      toast.error(message);\r\n      return yield put(addCategoryError(message));\r\n    }\r\n  } catch (err) {\r\n    toast.error(SOMETHING_WRONG);\r\n    return yield put(addCategoryError(err));\r\n  }\r\n}\r\n\r\n// Delete Category\r\nfunction* deleteCategory(payload){\r\n  try {\r\n    yield put(deletingCategory());\r\n    const {\r\n      data: { success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"DELETE\",\r\n      url: \"deleteCategory\",\r\n      appendUrl: `/${payload.data}`\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(deleteCategorySuccess(payload.data));\r\n    } else {\r\n      toast.error(message);\r\n      return yield put(deleteCategoryError(message));\r\n    }\r\n  } catch (err) {\r\n    toast.error(SOMETHING_WRONG);\r\n    return yield put(deleteCategoryError(err));\r\n  }\r\n}\r\n\r\nexport function* CategoriesSaga() {\r\n  yield takeLatest(FETCH_CATEGORY, fetchCategoriesData);\r\n  yield takeLatest(ADD_CATEGORY, addCategory);\r\n  yield takeLatest(DELETE_CATEGORY, deleteCategory);\r\n}\r\n\r\nexport default CategoriesSaga;\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport ApiService from \"../../utils/services\";\r\nimport {\r\n  addingBlog,\r\n  addBlogSuccess,\r\n  addBlogError,\r\n  fetchingBlog,\r\n  fetchBlogSuccess,\r\n  fetchBlogError\r\n} from \"./addBlogActions\";\r\nimport { ADD_BLOG, FETCH_BLOG } from \"./addBlogConstants\";\r\nimport {\r\n  showLoader,\r\n  hideLoader\r\n} from \"../../components/common/loader/loaderActions\";\r\n\r\n// Add New Blog/Update Blog\r\nfunction* addBlog(payload) {\r\n  try {\r\n    const {\r\n      args: { history, isEdit }\r\n    } = payload;\r\n    yield put(addingBlog());\r\n    yield put(showLoader(\"Please wait!\"));\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: isEdit ? \"PUT\" : \"POST\",\r\n      url: isEdit ? \"updateBlog\" : \"addBlog\",\r\n      data: payload.data\r\n    });\r\n    if (success) {\r\n      yield put(addBlogSuccess(data));\r\n      yield put(hideLoader());\r\n      return history.push(\"/blogs\");\r\n    } else {\r\n      yield put(hideLoader());\r\n      return yield put(addBlogError(message));\r\n    }\r\n  } catch (err) {\r\n    yield put(hideLoader());\r\n    return yield put(addBlogError(err));\r\n  }\r\n}\r\n\r\n// Fetch Blog Detail\r\nfunction* fetchBlogDetail(payload) {\r\n  try {\r\n    yield put(fetchingBlog());\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"blogDetails\",\r\n      appendUrl: `/${payload.data}`\r\n    });\r\n    if (success) {\r\n      return yield put(fetchBlogSuccess(data));\r\n    } else {\r\n      return yield put(fetchBlogError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchBlogError(err));\r\n  }\r\n}\r\n\r\nexport function* addBlogSaga() {\r\n  yield takeLatest(ADD_BLOG, addBlog);\r\n  yield takeLatest(FETCH_BLOG, fetchBlogDetail);\r\n}\r\n\r\nexport default addBlogSaga;\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { FETCH_BLOGS } from \"./taggingConstants\";\r\nimport { fetchingBlogs, fetchBlogsSuccess, fetchBlogsError } from \"./taggingActions\";\r\nimport ApiService from \"../../utils/services\";\r\n\r\nfunction* fetchAllBlogs() {\r\n  try {\r\n    yield put(fetchingBlogs());\r\n    const {\r\n      data: { data, success, message }\r\n    } = yield call(ApiService, {\r\n      method: \"GET\",\r\n      url: \"allblogs\"\r\n    });\r\n\r\n    if (success) {\r\n      return yield put(fetchBlogsSuccess(data));\r\n    } else {\r\n      return yield put(fetchBlogsError(message));\r\n    }\r\n  } catch (err) {\r\n    return yield put(fetchBlogsError(err));\r\n  }\r\n}\r\n\r\n\r\nconst taggingSaga = function* () {\r\n  yield takeLatest(FETCH_BLOGS, fetchAllBlogs)\r\n}\r\n\r\nexport default taggingSaga;\r\n","import { all } from 'redux-saga/effects';\r\nimport app from './app/appSaga';\r\nimport login from './app/routes/login/loginSaga';\r\nimport blogs from './app/routes/blogs/blogsSaga';\r\nimport categories from './app/routes/categories/categoriesSaga';\r\nimport addBlogSaga from './app/routes/addblog/addBlogSaga';\r\nimport taggingSaga from './app/routes/tagging/taggingSaga';\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    app(),\r\n    login(),\r\n    blogs(),\r\n    categories(),\r\n    addBlogSaga(),\r\n    taggingSaga(),\r\n  ]);\r\n}\r\n","import \"@babel/polyfill\";\r\nimport React from \"react\";\r\nimport { render, hydrate } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Loadable from \"react-loadable\";\r\nimport { Frontload } from \"react-frontload\";\r\nimport { Router } from \"react-router-dom\";\r\nimport createStore from \"./store\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport \"./app/styles/main.scss\";\r\nimport App from \"./app\";\r\nimport rootSaga from \"./rootSagas\";\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n// Create a store and get back itself and its history object\r\nconst { store, history } = createStore();\r\nstore.runSaga(rootSaga);\r\n\r\n// Running locally, we should run on a <ConnectedRouter /> rather than on a <StaticRouter /> like on the server\r\n// Let's also let React Frontload explicitly know we're not rendering on the server here\r\nconst Application = (\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <Frontload noServerRender={true}>\r\n        <App />\r\n      </Frontload>\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nconst root = document.querySelector(\"#root\");\r\n\r\nif (root.hasChildNodes() === true) {\r\n  // If it's an SSR, we use hydrate to get fast page loads by just\r\n  // attaching event listeners after the initial render\r\n  Loadable.preloadReady().then(() => {\r\n    hydrate(Application, root);\r\n  });\r\n} else {\r\n  // If we're not running on the server, just render like normal\r\n  render(Application, root);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { createBrowserHistory, createMemoryHistory } from \"history\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fromJS } from 'immutable';\r\nimport rootReducer from \"./rootReducer\";\r\nimport { isServer } from \"./app/utils/common\";\r\n\r\nexport default (url = \"/\") => {\r\n  // Create a history depending on the environment\r\n  const history = isServer\r\n    ? createMemoryHistory({\r\n        initialEntries: [url]\r\n      })\r\n    : createBrowserHistory();\r\n\r\n  const enhancers = [];\r\n\r\n  // Dev tools are helpful\r\n  if (process.env.NODE_ENV === \"development\" && !isServer) {\r\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\n\r\n    if (typeof devToolsExtension === \"function\") {\r\n      enhancers.push(devToolsExtension());\r\n    }\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middleware = [routerMiddleware(history), sagaMiddleware];\r\n  const composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n  );\r\n\r\n  // Do we have preloaded state available? Great, save it.\r\n  const initialState = !isServer ? window.__PRELOADED_STATE__ : {};\r\n\r\n  // Delete it once we have it stored in a variable\r\n  if (!isServer) {\r\n    delete window.__PRELOADED_STATE__;\r\n  }\r\n\r\n  // Create the store\r\n  const store = createStore(\r\n    rootReducer,\r\n    fromJS(initialState),\r\n    composedEnhancers\r\n  );\r\n  store.runSaga = sagaMiddleware.run;\r\n\r\n  return {\r\n    store,\r\n    history\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\nimport { APP_STATE_KEY } from \"./appConstants\";\r\n\r\n// Select App State\r\nexport const appState = state => state.get(APP_STATE_KEY);\r\n\r\n// Select isLoggedIn\r\nexport const makeSelectIsLoggedIn = () =>\r\n  createSelector(\r\n    appState,\r\n    appState => appState.get(\"isLoggedIn\")\r\n  );\r\n\r\n// Select sidebar\r\nexport const makeSelectSidebar = () =>\r\n  createSelector(\r\n    appState,\r\n    appState => appState.get(\"sidebar\")\r\n  );\r\n","import {\r\n  FETCH_BLOGS,\r\n  FETCH_BLOGS_SUCCESS,\r\n  FETCH_BLOGS_ERROR,\r\n  UPDATE_FILTERS,\r\n  FETCHING_BLOGS,\r\n  DELETE_BLOG,\r\n  DELETING_BLOG,\r\n  DELETE_BLOG_ERROR,\r\n  DELETE_BLOG_SUCCESS\r\n} from \"./blogsConstants\";\r\n\r\nexport const fetchBlogs = data => ({ type: FETCH_BLOGS, data });\r\nexport const fetchingBlogs = () => ({ type: FETCHING_BLOGS });\r\nexport const fetchBlogsSuccess = data => ({ type: FETCH_BLOGS_SUCCESS, data });\r\nexport const fetchBlogsError = err => ({ type: FETCH_BLOGS_ERROR, err });\r\nexport const updateFilters = filters => ({ type: UPDATE_FILTERS, filters });\r\n\r\nexport const deleteBlog = data => ({ type: DELETE_BLOG, data });\r\nexport const deletingBlog = () => ({ type: DELETING_BLOG });\r\nexport const deleteBlogError = data => ({ type: DELETE_BLOG_ERROR, data });\r\nexport const deleteBlogSuccess = data => ({ type: DELETE_BLOG_SUCCESS, data });\r\n","import {\r\n  ADD_BLOG,\r\n  ADDING_BLOG,\r\n  ADD_BLOG_SUCCESS,\r\n  ADD_BLOG_ERROR,\r\n  UPDATE_FORM_DATA,\r\n  FETCHING_BLOG,\r\n  FETCH_BLOG_SUCCESS,\r\n  FETCH_BLOG_ERROR,\r\n  FETCH_BLOG\r\n} from \"./addBlogConstants\";\r\n\r\nexport const updateFormData = data => ({ type: UPDATE_FORM_DATA, data });\r\n\r\n// Add/Update Blog\r\nexport const addBlog = (data, args) => ({ type: ADD_BLOG, data, args });\r\nexport const addingBlog = () => ({ type: ADDING_BLOG });\r\nexport const addBlogSuccess = data => ({ type: ADD_BLOG_SUCCESS, data });\r\nexport const addBlogError = data => ({ type: ADD_BLOG_ERROR, data });\r\n\r\n// Fetch Blog Detail\r\nexport const fetchBlog = data => ({ type: FETCH_BLOG, data });\r\nexport const fetchingBlog = () => ({ type: FETCHING_BLOG });\r\nexport const fetchBlogSuccess = data => ({ type: FETCH_BLOG_SUCCESS, data });\r\nexport const fetchBlogError = data => ({ type: FETCH_BLOG_ERROR, data });\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGGING_IN,\r\n  LOGIN,\r\n  LOGIN_ERROR\r\n} from \"./loginConstants\";\r\n\r\nexport const login = data => ({ type: LOGIN, data });\r\nexport const loggingIn = value => ({ type: LOGGING_IN, value });\r\nexport const loginSuccess = data => ({ type: LOGIN_SUCCESS, data });\r\nexport const loginError = data => ({ type: LOGIN_ERROR, data });\r\n","import {\r\n  FETCH_BLOGS,\r\n  FETCHING_BLOGS,\r\n  FETCH_BLOGS_SUCCESS,\r\n  FETCH_BLOGS_ERROR,\r\n  SELECT_CATEGORY\r\n} from \"./taggingConstants\";\r\n\r\nexport const fetchBlogs = data => ({ type: FETCH_BLOGS, data });\r\nexport const fetchingBlogs = () => ({ type: FETCHING_BLOGS });\r\nexport const fetchBlogsSuccess = data => ({ type: FETCH_BLOGS_SUCCESS, data });\r\nexport const fetchBlogsError = data => ({ type: FETCH_BLOGS_ERROR, data });\r\n\r\nexport const selectCategory = data => ({type : SELECT_CATEGORY, data});\r\n"],"sourceRoot":""}