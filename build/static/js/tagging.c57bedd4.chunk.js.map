{"version":3,"sources":["app/constants/meta.js","app/components/page/index.js","app/components/common/linkButton/index.js","app/components/common/pageHeading/index.js","app/routes/categories/categoriesSelectors.js","app/routes/tagging/tagging.js","app/routes/tagging/taggingSelectors.js","app/routes/tagging/index.js"],"names":["_assets_imgs__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","default","title","description","image","LOGO","twitter","sep","siteURL","keywords","facebookAppId","updated","Date","toDateString","published","contentType","home","id","login","signup","forgetpassword","notfound","SITE_URL","Meta","defaultTitle","defaultDescription","defaultKeywords","defaultImage","defaultTwitter","defaultSep","defaultUpdated","defaultPublished","defaultContentType","Page","pathname","_ref","noCrawl","category","tags","theTitle","substring","theDescription","theImage","concat","metaTags","itemprop","content","name","property","push","_this$props","this","props","children","className","rest","Object","C_Abhishar_demo_dash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_8___default","htmlAttributes","lang","itemscope","undefined","itemtype","schema","link","rel","href","location","meta","getMetaTags","Component","withRouter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","LinkButton","label","to","PageHeading","text","d","makeSelectCategories","makeSelectCategoryisFetching","reselect__WEBPACK_IMPORTED_MODULE_0__","_categoriesConstants__WEBPACK_IMPORTED_MODULE_1__","categoriesState","state","get","CATEGORIES_STATE_KEY","createSelector","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectCategory","cat","_id","isTagged","blog","selectedCategory","blogCategories","pathOr","length","includes","toString","renderPageHeader","react_default","linkButton","renderPageBody","renderCategories","renderBlogs","categories","map","key","onClick","blogs","renderBlogItem","Link","fetchBlogs","nextProps","page","tagging","pageHeading","React","PureComponent","taggingState","TAGGING_STATE_KEY","makeSelectBlogs","makeSelectSelectedCategory","mapStateToProps","createStructuredSelector","connect","dispatch","data","Tagging"],"mappings":"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","file":"static/js/tagging.c57bedd4.chunk.js","sourcesContent":["import { LOGO } from \"../assets/imgs\";\r\n\r\nexport default {\r\n  default: {\r\n    title: \"Meuzic\",\r\n    description: \"www.meuzic.com\",\r\n    image: LOGO,\r\n    twitter: \"\",\r\n    sep: \" | \",\r\n    siteURL: \"\",\r\n    keywords:\"\",\r\n    facebookAppId: \"XXXXXXXXX\",\r\n    updated: new Date().toDateString(),\r\n    published: new Date().toDateString(),\r\n    contentType: \"website\"\r\n  },\r\n  home: {\r\n    id: \"home\",\r\n    title: \"Dashboard\",\r\n    description: \"Dashboard\"\r\n  },\r\n  login: {\r\n    id: \"login\",\r\n    title: \"Login\",\r\n    description: \"Login to Meuzic\"\r\n  },\r\n  signup: {\r\n    id: \"signup\",\r\n    title: \"Signup\",\r\n    description: \"Signup on Meuzic\"\r\n  },\r\n  forgetpassword: {\r\n    id: \"forgotpassword\",\r\n    title: \"Forget Password\",\r\n    description: \"Forget Password\"\r\n  },\r\n  notfound: {\r\n    id: \"notfound\",\r\n    title: \"Oops! 404\",\r\n    description: \"This is not the web page you are looking for.\"\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Helmet from \"react-helmet\";\r\nimport Meta from \"../../constants/meta\";\r\n\r\nconst SITE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? Meta.default.siteURL\r\n    : Meta.default.siteURL;\r\n\r\nconst FACEBOOK_APP_ID = \"XXXXXXXXX\";\r\n\r\nconst defaultTitle = Meta.default.title;\r\nconst defaultDescription = Meta.default.description;\r\nconst defaultKeywords = Meta.default.keywords;\r\nconst defaultImage = Meta.default.image;\r\nconst defaultTwitter = Meta.default.twitter;\r\nconst defaultSep = Meta.default.sep;\r\nconst defaultUpdated = Meta.default.updated;\r\nconst defaultPublished = Meta.default.published;\r\nconst defaultContentType = Meta.default.contentType;\r\n\r\nclass Page extends Component {\r\n  getMetaTags(\r\n    {\r\n      title,\r\n      description,\r\n      image,\r\n      contentType,\r\n      twitter,\r\n      noCrawl,\r\n      published,\r\n      updated,\r\n      category,\r\n      tags,\r\n      keywords\r\n    },\r\n    pathname\r\n  ) {\r\n    const theTitle = title\r\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\r\n      : defaultTitle;\r\n    const theDescription = description\r\n      ? description.substring(0, 155)\r\n      : defaultDescription;\r\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\r\n\r\n    const metaTags = [\r\n      { itemprop: \"name\", content: theTitle },\r\n      { itemprop: \"description\", content: theDescription },\r\n      { itemprop: \"image\", content: theImage },\r\n      { name: \"description\", content: theDescription },\r\n      { name: \"keywords\", content: keywords || defaultKeywords },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n      { name: \"twitter:site\", content: defaultTwitter },\r\n      { name: \"twitter:title\", content: theTitle },\r\n      { name: \"twitter:description\", content: theDescription },\r\n      { name: \"twitter:creator\", content: twitter || defaultTwitter },\r\n      { name: \"twitter:image:src\", content: theImage },\r\n      { property: \"og:title\", content: theTitle },\r\n      { property: \"og:type\", content: contentType || defaultContentType },\r\n      { property: \"og:url\", content: SITE_URL + pathname },\r\n      { property: \"og:image\", content: theImage },\r\n      { property: \"og:description\", content: theDescription },\r\n      { property: \"og:site_name\", content: defaultTitle },\r\n      { property: \"fb:app_id\", content: FACEBOOK_APP_ID }\r\n    ];\r\n\r\n    if (noCrawl) {\r\n      metaTags.push({ name: \"robots\", content: \"noindex, nofollow\" });\r\n    } else {\r\n      metaTags.push({ name: \"robots\", content: \"index, follow\" });\r\n    }\r\n\r\n    if (published) {\r\n      metaTags.push({\r\n        name: \"article:published_time\",\r\n        content: published || defaultPublished\r\n      });\r\n    }\r\n    if (updated) {\r\n      metaTags.push({\r\n        name: \"article:modified_time\",\r\n        content: updated || defaultUpdated\r\n      });\r\n    }\r\n    if (category) {\r\n      metaTags.push({ name: \"article:section\", content: category });\r\n    }\r\n    if (tags) {\r\n      metaTags.push({ name: \"article:tag\", content: tags });\r\n    }\r\n\r\n    return metaTags;\r\n  }\r\n\r\n  render() {\r\n    const { children, id, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div id={id} className={className}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: \"en\",\r\n            itemscope: undefined,\r\n            itemtype: `http://schema.org/${rest.schema || \"WebPage\"}`\r\n          }}\r\n          title={\r\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\r\n          }\r\n          link={[\r\n            {\r\n              rel: \"canonical\",\r\n              href: SITE_URL + this.props.location.pathname\r\n            }\r\n          ]}\r\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./linkbutton.scss\";\r\n\r\nconst LinkButton = ({ label, to, className }) => {\r\n  return (\r\n    <Link to={to} className={className}>\r\n      {label}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from 'react';\r\nimport './pageHeading.scss';\r\nconst PageHeading = ({text}) => {\r\n  return (\r\n    <div className='page-heading mb-2'>{text}</div>\r\n  )\r\n}\r\n\r\nexport default PageHeading;\r\n","import { createSelector } from \"reselect\";\r\nimport { CATEGORIES_STATE_KEY } from \"./categoriesConstants\";\r\n\r\nexport const categoriesState = state => state.get(CATEGORIES_STATE_KEY);\r\n\r\nexport const makeSelectCategories = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"data\")\r\n);\r\nexport const makeSelectCategoryisFetching = createSelector(\r\n  categoriesState,\r\n  state => state.get(\"isFetching\")\r\n);\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { pathOr } from \"lodash/fp\";\r\nimport \"./tagging.scss\";\r\nimport Page from \"../../components/page\";\r\nimport Meta from \"../../constants/meta\";\r\nimport PageHeading from \"../../components/common/pageHeading\";\r\nimport LinkButton from \"../../components/common/linkButton\";\r\n\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchBlogs();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Auto Select category (if not selected)\r\n    if(nextProps.selectedCategory === null && nextProps.categories.length > 0) {\r\n      nextProps.selectCategory(nextProps.categories[0]._id);\r\n    }\r\n  }\r\n\r\n  selectCategory = cat => {\r\n    const { selectCategory } = this.props;\r\n    selectCategory(cat._id);\r\n  };\r\n\r\n  isTagged = blog => {\r\n    const { selectedCategory } = this.props;\r\n    const blogCategories = pathOr(undefined, \"category\", blog);\r\n    if (!selectedCategory) return false;\r\n    if (blogCategories && blogCategories.length < 1) return false;\r\n    if (blogCategories.includes(selectedCategory.toString())) return true;\r\n    return false;\r\n  };\r\n\r\n  renderPageHeader = () => {\r\n    return (\r\n      <div className=\"page-header\">\r\n        <h1>Category - Blog Tagging</h1>\r\n        <LinkButton to=\"/blog/add\" className='float-right' label=\"Add New Blog\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderPageBody = () => {\r\n    return (\r\n      <div className=\"page-body\">\r\n        {this.renderCategories()}\r\n        {this.renderBlogs()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderCategories = () => {\r\n    const { categories, selectedCategory } = this.props;\r\n    return (\r\n      <ul className=\"category-list\">\r\n        <p>Categories</p>\r\n        {categories &&\r\n          categories.map(cat => (\r\n            <li\r\n              key={cat._id}\r\n              className={selectedCategory === cat._id ? \"active\" : \"\"}\r\n              onClick={() => this.selectCategory(cat)}\r\n            >\r\n              {cat.name}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  renderBlogs = () => {\r\n    const { blogs } = this.props;\r\n    return (\r\n      <ul className=\"blogs-list\">\r\n        <p>Blogs</p>\r\n        {blogs && blogs.map(blog => this.renderBlogItem(blog))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  renderBlogItem = blog => {\r\n    const isTagged = this.isTagged(blog);\r\n    const tick = '✔';\r\n    const cross = '✘'\r\n    return (\r\n      <li key={blog._id} className={isTagged ? \"active\" : \"\"}>\r\n        <div className='tag-status' title={isTagged ? 'Tagged' : 'Not Tagged'}>{isTagged ? tick : cross}</div>\r\n        <Link to={`/blog/${blog._id}`}>{blog.title}</Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Page {...Meta.tagging}>\r\n        <div className=\"tagging-page\">\r\n          <PageHeading text=\"Dashboard &#8226; Category Tagging\" />\r\n          {this.renderPageHeader()}\r\n          {this.renderPageBody()}\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import { TAGGING_STATE_KEY } from \"./taggingConstants\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nexport const taggingState = state => state.get(TAGGING_STATE_KEY);\r\n\r\nexport const makeSelectBlogs = createSelector(taggingState, state => state.get('data'));\r\nexport const makeSelectSelectedCategory = createSelector(taggingState, state => state.get('selectedCategory'))\r\n","import { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\nimport Tagging from \"./tagging\";\r\nimport { makeSelectCategories } from \"../categories/categoriesSelectors\";\r\nimport { fetchBlogs, selectCategory } from \"./taggingActions\";\r\nimport { makeSelectBlogs, makeSelectSelectedCategory } from \"./taggingSelectors\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  categories: makeSelectCategories,\r\n  blogs: makeSelectBlogs,\r\n  selectedCategory : makeSelectSelectedCategory,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBlogs: data => dispatch(fetchBlogs(data)),\r\n  selectCategory: data =>dispatch(selectCategory(data))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Tagging);\r\n"],"sourceRoot":""}